@model MainOps.Models.ViewModels.DeInstallItemVM
<head>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDhvR9rVDhwZhuFSlvp9ZYsGLVpLt6KlIM&sensor=false&libraries=places"></script>
</head>
@{
    ViewData["Title"] = SharedLocalizer.GetLocalizedHtmlString("DeInstall");
}
<h2>@SharedLocalizer.GetLocalizedHtmlString("Deinstall")</h2>
<div class="row">
    <div class="col-xs-12">
        <form id="deinstallform" asp-controller="TrackItems" asp-action="DeInstall" method="post" enctype="multipart/form-data" onsubmit="retrieveData(event);">
            <table style="width:100%;table-layout:fixed;">
                <tr>
                    <td><label>@SharedLocalizer.GetLocalizedHtmlString(@Html.DisplayNameFor(x => x.Project))</label></td>
                    <td><select asp-for="ProjectId" id="ProjectId" class="form-control" asp-items="ViewBag.ProjectId" onchange="FillItems()" style="width:100%;"><option value="">@SharedLocalizer.GetLocalizedHtmlString("Select Project")</option></select></td>
                </tr>
                <tr>
                    <td>
                        <label>@SharedLocalizer.GetLocalizedHtmlString(@Html.DisplayNameFor(x => x.ItemType))</label>
                    </td>
                    <td>
                        @Html.DropDownListFor(Model => Model.ItemTypeId, ViewData["ItemTypeId"] as SelectList, @SharedLocalizer.GetLocalizedHtmlString("All"), new { @onchange = "UpdateList(this.value)", @style = "width:100%;" })
                    </td>
                </tr>
                <tr>
                    <td><label>@SharedLocalizer.GetLocalizedHtmlString("Search Unique ID:")</label></td>
                    <td><input type="text" onchange="SearchUniqueID(this.value);" style="width:100%;"/></td>
                </tr>
                <tr>
                    <td><label asp-for="TimeStamp" class="control-label">@SharedLocalizer.GetLocalizedHtmlString(@Html.DisplayNameFor(Model => Model.TimeStamp))</label></td>
                    <td>
                        <input type="text" class="date-picker" value="@DateTime.Now.ToString("yyyy-MM-dd")" asp-for="TimeStamp" id="thetime" style="width:100%;height:40px;" />
                        <span asp-validation-for="TimeStamp" class="text-danger"></span>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label>@SharedLocalizer.GetLocalizedHtmlString(@Html.DisplayNameFor(x => x.LogText))</label>
                    </td>
                    <td>
                        <textarea rows="4" cols="32" name="LogText" id="LogText" style="width:100%;"></textarea>
                    </td>
                </tr>
                <tr>
                    <td><label class="control-label">@SharedLocalizer.GetLocalizedHtmlString("Upload pictures")</label></td>
                    <td><input type="file" name="files" multiple accept=".jpg,.jpeg,.png,.gif,.pdf" style="width:100%;" /></td>
                </tr>
                <tr>
                    <td>
                        <label asp-for="DeInstallItemId" class="control-label">@SharedLocalizer.GetLocalizedHtmlString("Id of Chosen Item")</label>
                    </td>
                    <td>
                        <input type="number" id="DeInstallItemId" name="DeInstallItemId" value="-1" style="width:100%;" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <button type="button" onclick="setthecenter();" class="btn-hoelscher">@SharedLocalizer.GetLocalizedHtmlString("Center Map")</button>
                    </td>
                    <td>
                        <button class="btn-hoelscher" type="submit">@SharedLocalizer.GetLocalizedHtmlString("DEINSTALL")</button>
                    </td>
                </tr>
            </table>
            <div>
                
            </div>

            
        </form>
    </div>
    <div id="myDiv" style="width:100%;height:500px;"></div>
    <input type="datetime" value="@DateTime.Now" name="TimeStamp" hidden="hidden" />
    <input type="number" id="latinput" value="0" name="Latitude" hidden="hidden" />
    <input type="number" id="longinput" value="0" name="Longitude" hidden="hidden" />
</div>
<div>
    <a asp-action="MainMenu">@SharedLocalizer.GetLocalizedHtmlString("Back to List")</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script type="text/javascript" charset="utf-8">
    var gmarkers = [];
    var myLat = 0, myLng = 0;
    var id;
    var myLatLng = { lat: 55.682936, lng: 12.3729016 };
    var myposmarker;
    var isfound = false;
    //Create Options or set different Characteristics of Google Map
    var mapOptions = {
        center: myLatLng,
        zoom: 16,
        minZoom: 8,
        mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    $('#deinstallform').on('keyup keypress', function (e) {
        var keyCode = e.keyCode || e.which;
        if (keyCode === 13) {
            e.preventDefault();
            return false;
        }
    });
    //Display the Google map in the div control with the defined Options
    const map = new google.maps.Map(document.getElementById("myDiv"), mapOptions);
        if (navigator.geolocation) {
            id = navigator.geolocation.watchPosition(function (position) {
                myLat = position.coords.latitude;
                myLng = position.coords.longitude;
                getPos(myLat, myLng);
            },
                function (error) {
                    if (error.code == error.PERMISSION_DENIED) {
                                                //alert("error");
                    }

                }, { maximumAge: 20000, timeout: 8000, enableHighAccuracy: true });
        }
    $(document).ready(function () {       
        DisplayGoogleMap();
    });
    function SearchUniqueID(texttosearch) {
        if (texttosearch.length >= 4) {
            for (i = 0; i < gmarkers.length; i++) {
                if (gmarkers[i].uniqueid.toLowerCase().includes(texttosearch.toLowerCase()) && gmarkers[i].getVisible() == true) {
                    var latLng = gmarkers[i].getPosition();
                    map.setZoom(17);
                    map.panTo(latLng);
                    chooseThis(gmarkers[i].Id);
                    gmarkers[i]
                }
            }
        }
    }
    function getPos(lat, lng, acc) {
        $("#accuracy").val(acc);
        $("#latinput").val(lat);
        $("#longinput").val(lng);
        if (!isfound) {
            setPos(lat, lng);
            isfound = true;
        }
    }
    function setPos(lat, lng) {
        var initialLocation = new google.maps.LatLng(lat, lng);
        if (myposmarker == null) {
            myposmarker = new google.maps.Marker({
                map: map,
                position: { lat: lat, lng: lng },
                title: "You",

            });           
            myposmarker.setIcon({
                url: 'https://maps.google.com/mapfiles/ms/icons/yellow-dot.png',
                scaledSize: new google.maps.Size(70, 70)
            })

            myposmarker['infowindow'] = new google.maps.InfoWindow({
                content: 'Your Position!'
            });           
            myposmarker.setMap(map);
            map.setCenter(new google.maps.LatLng(lat, lng));
        }
        google.maps.event.addListener(myposmarker, 'click', function () {
            this['infowindow'].open(map, this);
        });
        map.setCenter(initialLocation);
    }
    function retrieveData(e) {
        var posting = true;
        var item = document.getElementById("DeInstallItemId").value;
        if (item == "" || item == null || item == -1) {
            posting = false;
            e.preventDefault();
            alert("Please choose item to deinstall on map!");
        }
        if (posting == true) {
            StartSpinner();
        }
    }
   
    function FillItems() {
            var ProjectId = $('#ProjectId').val();
            var url = '@Url.Action("GetItemsProject", "ItemTypes")';
                $.ajax({
                    type: 'GET',
                    url: url,
                    dataType: 'json',
                    data: {
                        'theId': ProjectId,
                        'type' : "deinstall"
                    },
                    success: function (data) {
                        var s = '<option value="">Please Select</option>';
                        for (var prop in data) {
                            s += '<option value="' + data[prop]["id"] + '">' + data[prop]["item_Type"] + '</option>';
                        }
                        $("#ItemTypeId").html(s);
                        document.getElementById("ItemTypeId").style.width = "100%";
                    }
                });
            for (i = 0; i < gmarkers.length; i++) {
                if (gmarkers[i].projectid == ProjectId) {
                    gmarkers[i].setVisible(true);
                }
                else {
                    gmarkers[i].setVisible(false);
                }

            }
        }
        $(document).ready(function () {
            $(function () {
                $(".date-picker").datepicker({
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-2:+0",
                    dateFormat: "dd-MM-yy",
                    controlType: 'select',
                    firstDay: 1

                });
                $('.date-picker').datepicker("setDate", new Date());
                document.getElementById('ProjectId').options[0].selected = 'selected';
                FillItems();
            });
        });

        function UpdateList(index) {
            $.ajax({
                url: '@Url.Action("getItemType", "TrackItems")',
                data: { id: index },
                type: "GET",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    for (i = 0; i < gmarkers.length; i++) {
                        if (gmarkers[i].title.replace('&#xF8;', "ø").replace('&#xE6;', "æ").replace('&#xE5;',"å") == data) {
                            gmarkers[i].setVisible(true);
                        }
                        else {
                            gmarkers[i].setVisible(false);
                        }

                    }
                },
                error: function (data) {
                    for (i = 0; i < gmarkers.length; i++) {
                        gmarkers[i].setVisible(true);
                    }
                },
            });
    }

        function chooseThis(index) {
            $("#DeInstallItemId").val(index);
            $.ajax({
                url: '@Url.Action("getTheProject", "TrackItems")',
                data: { id: index },
                type: "GET",
                contentType: "application/json; charset=utf-8",
                success: function (data1) {
                    $("#ProjectId").val(data1);
                    var ProjectId = $('#ProjectId').val();
                    var url = '@Url.Action("GetItemsProject", "ItemTypes")';
                    $.ajax({
                        type: 'GET',
                        url: url,
                        dataType: 'json',
                        data: {
                            'theId': ProjectId,
                            'type' : "deinstall"
                        },
                        success: function (data) {
                            var s = '<option value="-1">Please Select</option>';
                            for (var prop in data) {
                                s += '<option value="' + data[prop]["id"] + '">' + data[prop]["item_Type"] + '</option>';
                            }
                            $("#ItemTypeId").html(s);
                            document.getElementById("ItemTypeId").style.width = "100%";
                            $.ajax({
                                url: '@Url.Action("getTheItem", "TrackItems")',
                                data: { id: index },
                                type: "GET",
                                contentType: "application/json; charset=utf-8",
                                success: function (data2) {
                                    $("#ItemTypeId").val(data2);
                                },
                                error: function (data) {

                                },
                            });
                        }
                    });

                },
                error: function (data) {

                },
            });

        }

        function DisplayGoogleMap() {
            //Set the Latitude and Longitude of the Map


            @foreach(var item in Model.InstalledCoordinates)
            {
             <text>

            var marker = new google.maps.Marker({
                  map: map,
                  position: { lat: @item.Latitude, lng: @item.Longitude },
                title: "@item.ItemType.Item_Type.Replace("\""," inch",0)",
                projectid: "@item.ProjectId",
                uniqueid: "@item.UniqueID",
                    Id: "@item.Id",
            });
            marker['infowindow'] = new google.maps.InfoWindow({
                content: 'Item: @item.ItemType.Item_Type : Unique ID: @item.UniqueID : @item.Install_Text  <button type="button" onclick="chooseThis(@item.Id)">Choose this</button>'
            });

            google.maps.event.addListener(marker, 'click', function () {
                this['infowindow'].open(map, this);
            });
            gmarkers.push(marker);

            marker.setMap(map);
            </text>
            }
            map.setCenter(myposmarker.getPosition())

    }
    function setthecenter() {
        navigator.geolocation.getCurrentPosition(function (position) {
            myposmarker = null;
            isfound = false;
            var Lat = position.coords.latitude;
            var Lng = position.coords.longitude;
            map.setCenter({ lat: Lat, lng: Lng });

        },

            function (error) {
                if (error.code == error.PERMISSION_DENIED) {
                    alert("error permission denied");
                }
            }, { maximumAge: 0, timeout: 8000, enableHighAccuracy: true });
    }

</script>
}

