@model MainOps.Models.ReportClasses.Daily_Report_2

@{
    ViewData["Title"] = "Edit_DailyReport_2";
}

<h2>
    @SharedLocalizer.GetLocalizedHtmlString("Edit DailyReport")
</h2>

<h4>@SharedLocalizer.GetLocalizedHtmlString("Daily Report")</h4>
<hr />

<form asp-action="Edit_DailyReport_2" enctype="multipart/form-data">
    @Html.HiddenFor(Model => Model.EnteredIntoDataBase)
    @Html.HiddenFor(Model => Model.LastEditedInDataBase)
    @Html.HiddenFor(Model => Model.HasPhotos)
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <table>

        <tr>
            <td><label asp-for="ProjectId" class="control-label"></label></td>
            <td><select asp-for="ProjectId" class="form-control" asp-items="ViewBag.ProjectId" onchange="FillTitles();"></select></td>
        </tr>
        <tr>
            <td colspan="2"><h3>@SharedLocalizer.GetLocalizedHtmlString("If you have changed Project, please RE-choose your title!")</h3></td>
        </tr>
        <tr>
            <td><label asp-for="TitleId" class="control-label"></label></td>
            <td><select asp-for="TitleId" class="form-control" asp-items="ViewBag.TitleId"></select></td>
        </tr>
        <tr>
            <td><label asp-for="SubProjectId" class="control-label"></label></td>
            <td>
                <select asp-for="SubProjectId" class="form-control" asp-items="ViewBag.SubProjectId">
                    <option value="">@SharedLocalizer.GetLocalizedHtmlString("Please Select SubProject")</option>
                </select>
            </td>
        </tr>
        <tr>
            <td><label asp-for="VariationOrderId" class="control-label"></label></td>
            <td><select asp-for="VariationOrderId" class="form-control" asp-items="ViewBag.VariationOrderId"><option value="">@SharedLocalizer.GetLocalizedHtmlString("Select VariationOrder")</option></select></td>
        </tr>
        <tr>
            <td><label asp-for="short_Description" class="control-label"></label></td>
            <td><input asp-for="short_Description" class="form-control" /></td>
        </tr>
        <tr>
            <td><label asp-for="Report_Date" class="control-label"></label></td>
            <td>
                <input type="date" asp-for="Report_Date" value="@Model.Report_Date.ToString("yyyy-MM-dd")" style="width:100%;height:40px;" />
                <span asp-validation-for="Report_Date" class="text-danger"></span>
            </td>
        </tr>
        <tr>
            <td><label asp-for="InvoiceDate" class="control-label"></label></td>
            <td>
                <input type="date" asp-for="InvoiceDate" style="width:100%;height:40px;" />
                <span asp-validation-for="InvoiceDate" class="text-danger"></span>
            </td>
        </tr>
        <tr>
            <td colspan="2"><label asp-for="Work_Performed" class="control-label"></label></td>
        </tr>
        <tr>
            <td colspan="2"><textarea rows="6" cols="50" class="form-control" asp-for="Work_Performed" style="width:100%;"></textarea></td>
        </tr>
        <tr>
            <td><label asp-for="StartHour" class="control-label"></label></td>
            <td><input asp-for="StartHour" onchange="Updatehourminuteinput(this);" class="form-control" /> <span asp-validation-for="StartHour" class="text-danger"></span></td>
        </tr>
        <tr>
            <td><label asp-for="EndHour" class="control-label"></label></td>
            <td><input asp-for="EndHour" onchange="Updatehourminuteinput(this);" class="form-control" /> <span asp-validation-for="EndHour" class="text-danger"></span></td>
        </tr>
        <tr>
            <td><label asp-for="StandingTime" class="control-label"></label></td>
            <td><input asp-for="StandingTime" onchange="Updatehourminuteinput(this);" class="form-control" /> <span asp-validation-for="StartHour" class="text-danger"></span></td>
        </tr>
        <tr>
            <td><label asp-for="SafetyHours" class="control-label"></label></td>
            <td><input asp-for="SafetyHours" onchange="Updatehourminuteinput(this);" class="form-control" /> <span asp-validation-for="EndHour" class="text-danger"></span></td>
        </tr>
        <tr>
            <td><label asp-for="Amount" class="control-label"></label></td>
            <td>
                <input asp-for="Amount" class="form-control" style="width:100%;" onchange="UnHideOtherPeople();" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </td>
        </tr>
        @*<tr id="otherpeopletr1">
            <td><label class="control-label">@SharedLocalizer.GetLocalizedHtmlString("Add Other People")</label></td>
            <td><textarea asp-for="OtherPeople" cols="30" rows="3" readonly="readonly" style="width:100%;"></textarea></td>
        </tr>
        <tr id="otherpeopletr2">
            <td>
                <button type="button" onclick="AddUser();" class="btn-hoelscher control-label">@SharedLocalizer.GetLocalizedHtmlString("Add Co-Worker")</button>
                <button type="button" onclick="ClearUsers();" class="btn-hoelscher control-label">@SharedLocalizer.GetLocalizedHtmlString("Clear Co-Workers")</button>
            </td>
            <td><select id="userid" asp-items="ViewBag.Users" style="width:100%;"></select></td>
        </tr>*@
        <tr id="otherpeopletr1">
            <td><label class="control-label">@SharedLocalizer.GetLocalizedHtmlString("Add Other People")</label></td>
            <td>
                <select id="userid" asp-items="ViewBag.Users" style="width:100%;"></select>
                <textarea asp-for="OtherPeople" id="OtherPeople" cols="30" rows="3" style="width:100%;" readonly="readonly"></textarea>
                <button type="button" onclick="AddUser();" class="btn-hoelscher" style="width:40%;">@SharedLocalizer.GetLocalizedHtmlString("Add Co-Worker")</button>
                <button type="button" onclick="ClearUsers();" class="btn-hoelscher" style="width:40%;">@SharedLocalizer.GetLocalizedHtmlString("Clear Co-Workers")</button>
            </td>
        </tr>
        <tr hidden="hidden">
            <td>@SharedLocalizer.GetLocalizedHtmlString("Users added:")</td>
            <td> <input type="text" asp-for="OtherPeopleIDs" id="OtherPeopleIDs" /></td>
        </tr>
        <tr>
            <td><label asp-for="Machinery" class="control-label"></label></td>
            <td>
                <select id="MachineryIds" multiple="multiple" style="width:100%;">
                    @foreach (var item in ViewBag.Machinery)
                    {
                        <option value="@item.Text">@item.Text</option>
                    }
                </select>
                <input asp-for="Machinery" id="textformachinery" style="width:100%;" />
                <button type="button" onclick="AddSelection();" class="btn-hoelscher">@SharedLocalizer.GetLocalizedHtmlString("Add Machinery")</button>
                <button type="button" onclick="ClearSelection();" class="btn-hoelscher">@SharedLocalizer.GetLocalizedHtmlString("Clear Machinery")</button>
            </td>
        </tr>
        <tr>
            <td>
                <label asp-for="tobepaid" class="control-label"></label>
            </td>
            <td>
                <select asp-for="tobepaid">
                    <option value="">@SharedLocalizer.GetLocalizedHtmlString("PLEASE SELECT")</option>
                    <option value="1">@SharedLocalizer.GetLocalizedHtmlString("Hour Rate Payment(Extra Works)")</option>
                    <option value="2">@SharedLocalizer.GetLocalizedHtmlString("Unit Rate Payment(Installations etc.)")</option>
                </select>
                <span asp-validation-for="tobepaid" class="text-danger"></span>
            </td>
        </tr>
        @if (User.IsInRole("Admin") || User.IsInRole("Manager") || User.IsInRole("DivisionAdmin"))
        {
            <tr>
                <td><label asp-for="Report_Checked" class="control-label"></label></td>
                <td><input asp-for="Report_Checked" type="checkbox" class="form-control" onchange="this.checked ? this.value = true : this.value = false;" /></td>
            </tr>
            <tr>
                <td><label asp-for="Checked_By" class="control-label"></label></td>
                <td><input asp-for="Checked_By" class="form-control" /></td>
            </tr>
        }
        else
        {
            <tr>
               
                <td><input asp-for="Report_Checked" class="form-control" hidden="hidden"/></td>
            </tr>
            <tr>

                <td><input asp-for="Checked_By" class="form-control" hidden="hidden" /></td>
            </tr>
        }

        <tr>
            <td><label asp-for="DoneBy" class="control-label"></label></td>
            <td><input asp-for="DoneBy" class="form-control" /></td>
        </tr>
        <tr>
            <td><label class="control-label">@SharedLocalizer.GetLocalizedHtmlString("Upload pictures")</label></td>
            <td><input type="file" name="files" multiple accept=".jpg,.jpeg,.png,.gif,.pdf" /></td>
        </tr>
    </table>
    <input type="hidden" asp-for="Id" />
    <div class="form-group">
        <input type="submit" value="Save" class="btn-hoelscher" />
    </div>


</form>
<table name="phototable" style="width:100%;table-layout:fixed;">
    @{ var rows = Model.pictures.Count();}
    @for (int i = 0; i < rows; i++)
    {

        <tr id="photo_@i">
            <td style="width:60%;"><img src="~/AHAK/DailyReports/@Model.Id.ToString()/@Model.pictures[i]" style="width:100%;" /></td>
            <td style="width:20%;">
                <button type="button" class="btn-hoelscher" id="button_@i" onclick="RemovePhoto(@Model.Id,@i);" picturename="@Model.pictures[i]">@SharedLocalizer.GetLocalizedHtmlString("Delete Photo")</button>
            </td>
            <td style="width:20%;">
                <form asp-action="DownloadPhoto" asp-controller="TrackItems" method="post">
                    <input type="hidden" name="theid" value="@Model.Id" />
                    <input type="hidden" name="thephoto" value="@Model.pictures[i]" />
                    <button class="btn-hoelscher">@SharedLocalizer.GetLocalizedHtmlString("Download Photo")</button>
                </form>
            </td>
        </tr>
    }
</table>
<div>
    <a asp-action="MainMenu">@SharedLocalizer.GetLocalizedHtmlString("Back to List")</a>
</div>
<br />
<br />
<br />
<div>
    <form asp-action="MakeDrillRigDownTime" method="post" asp-route-id="@Model.Id">
        <button class="btn-hoelscher">@SharedLocalizer.GetLocalizedHtmlString("Make Drill Rig DownTime")</button>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/jquery-ui-timepicker-addon.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(function () {
                $(".date-picker").datepicker({
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-100:+0",
                    dateFormat: "yy-MM-dd",
                    controlType: 'select'
                });
                FillTitles();
                UnHideOtherPeople();
            });
        });
        function UnHideOtherPeople() {
            var amount = $("#Amount").val();
            if (amount > 1) {
                if ($("#otherpeopletr1").is(":hidden") == true) {
                    $("#otherpeopletr1").removeAttr('hidden');
                }
                //if ($("#otherpeopletr2").is(":hidden") == true) {
                //    $("#otherpeopletr2").removeAttr('hidden');
                //}
            }
            else {
                if ($("#otherpeopletr1").is(":hidden") != true) {
                    $("#otherpeopletr1").attr("hidden", 1);
                    $("#otherpeopletr1").val(1);
                }
                //if ($("#otherpeopletr2").is(":hidden") != true) {
                //    $("#otherpeopletr2").attr("hidden", 1);
                //    $("#otherpeopletr2").val(1);
                //}

            }
        }
        function ClearUsers() {
            $("#OtherPeopleIDs").val("");
            $("#OtherPeople").val("");
        }
        function AddUser() {
            var selectedItem = $("#userid option:selected").val();
            var selectedText = $("#userid option:selected").text();
            if ($("#OtherPeopleIDs").val() == "") {
                $("#OtherPeopleIDs").val(selectedItem);
            }
            else {
                $("#OtherPeopleIDs").val($("#OtherPeopleIDs").val() + ", " + selectedItem);
            }
            if ($("#OtherPeople").val() == "") {
                $("#OtherPeople").val(selectedText);
            }
            else {
                $("#OtherPeople").val($("#OtherPeople").val() + ", " + selectedText);
            }
        }
        function RemovePhoto(id, idx) {
            var result = confirm("Are you sure you want to DELETE this photo?");
            if (result) {
                var toremove = $("#button_" + idx).attr('picturename');
                var url = '@Url.Action("RemovePhoto", "TrackItems")';
                $.ajax({
                    type: 'POST',
                    url: url,
                    data: {
                        'theid': id,
                        'thephoto': toremove
                    },
                    success: function (data) {
                        document.getElementById('photo_' + idx).style.display = "none";
                    },
                    error: function (output) {
                        alert("Error");
                    }
                });
            }

        }
        @*function DownloadPhoto(id, idx) {
            var result = confirm("Are you sure you want to DOWNLOAD this photo?");
            if (result) {
                var todownload = $("#button2_" + idx).attr('picturename');
                var url = '@Url.Action("DownloadPhoto", "TrackItems")';
                $.ajax({
                    type: 'POST',
                    url: url,
                    data: {
                        'theid': id,
                        'thephoto': todownload
                    },
                    success: function (data) {

                    },
                    error: function (output) {
                        alert("Error");
                    }
                });
            }

        }*@

        function FillSubProjects() {
            var SubProjectId = $('#SubProjectId').val();
            var ProjectId = $('#ProjectId').val();
            var url = '@Url.Action("GetSubProjectList", "SubProjects")';
            $.ajax({
                type: 'GET',
                url: url,
                dataType: 'json',
                data: { 'theId': ProjectId },
                success: function (data) {
                    if (data.length > 0) {
                        var s = '<option value="">Please Select SubProject</option>';
                        for (var prop in data) {
                            s += '<option value="' + data[prop]["id"] + '">' + data[prop]["name"] + '</option>';
                        }
                        $("#SubProjectId").html(s);
                        document.getElementById("SubProjectId").style.width = "100%";
                        var x = document.getElementById("SubProjectId");
                        var i;
                        for (i = 0; i < x.length; i++) {
                            if (x.options[i].value == SubProjectId) {
                                x.options[i].selected = true;
                            }
                        }
                    }
                    else {
                        var s = '<option value="">Please Select SubProject</option>';
                        $("#SubProjectId").html(s);
                    }
                    FillVariationOrders();
                }
            });
        }
        function FillTitles() {
            var titleId = $('#TitleId').val();
            var ProjectId = $('#ProjectId').val();
            var url = '@Url.Action("GetTitlesProject", "Titles")';
            $.ajax({
                type: 'GET',
                url: url,
                dataType: 'json',
                data: {'theId' : ProjectId},
                success: function (data) {
                    var s = '<option value="">Please Select</option>';
                    for (var prop in data) {
                        s += '<option value="' + data[prop]["id"] + '">' + data[prop]["theTitle"] + '</option>';
                    }
                    $("#TitleId").html(s);
                    document.getElementById("TitleId").style.width = "100%";
                    var x = document.getElementById("TitleId");
                    var i;
                    for (i = 0; i < x.length; i++) {
                        if (x.options[i].value == titleId) {
                            x.options[i].selected = true;
                        }
                    }
                    FillSubProjects();
                }
            });
        }
        function AddSelection() {
            var selected_text = $('#MachineryIds option:selected')
                .toArray().map(item => item.text).join();
            var currenttext = $("#textformachinery").val();
            if (currenttext != "None") {
                var newtext = selected_text + "," + currenttext;
                $("#textformachinery").val(newtext);
            }
            else {
                $("#textformachinery").val(selected_text);
            }
        }
        function ClearSelection() {
            $("#textformachinery").val("None");
        }
        function FillVariationOrders() {
            var ProjectId = $('#ProjectId').val();
            var variationOrderId = $('#VariationOrderId').val();
            var url = '@Url.Action("GetVariationOrdersProject", "BoQHeadlines")';
            $.ajax({
                type: 'GET',
                url: url,
                dataType: 'json',
                data: {
                    'theId': ProjectId
                },
                success: function (data) {
                    var s = '<option value="">Please Select</option>';
                    for (var prop in data) {
                        s += '<option value="' + data[prop]["id"] + '">' + data[prop]["headLine"] + '</option>';
                    }
                    $("#VariationOrderId").html(s);
                    document.getElementById("VariationOrderId").style.width = "100%";
                    var x = document.getElementById("VariationOrderId");
                    var i;
                    for (i = 0; i < x.length; i++) {
                        if (x.options[i].value == variationOrderId) {
                            x.options[i].selected = true;
                        }
                    }
                }
            });
        }
        function Updatehourminuteinput(elem) {
            var re = new RegExp("^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$");
            if (re.test(elem.value)) {
                if (elem.value.length == 4) {
                    elem.value = "0" + elem.value;
                }
            }
            else {
                if (elem.value.includes(".")) {
                    elem.value = elem.value.replace(".", ":");
                    if (re.test(elem.value)) {
                        if (elem.value.length == 4) {
                            elem.value = "0" + elem.value;
                        }
                    }
                }
                if (!elem.value.includes(":") && !elem.value.includes(".") && elem.value.length < 3) {
                    elem.value = elem.value + ":00";
                    if (elem.value.length < 5) {
                        elem.value = "0" + elem.value;
                    }
                }
            }
        }

    </script>
}
