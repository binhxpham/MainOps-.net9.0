@model MainOps.Models.WellDrillingInstruction

@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Instruction</title>   
    <script src="https://code.jquery.com/jquery-3.2.1.js"></script>
</head>
<body>
    <div style="width:100%;">
        <div id="test"></div>
        <table border="1" style="width:100%;border-collapse:unset;">
            <tr>
                <td rowspan="5" style="border-left:medium;border-top:medium;width:25%;"><h2>@SharedLocalizer.GetLocalizedHtmlString("Drilling Instruction")</h2></td>
                <td rowspan="5" align="right" style="border-right:medium;border-top:medium;width:25%;"><img src="~/images/Divisions/Photos/@Model.Project.DivisionId/@Model.Project.Division.LogoPath" style="width:100%;" /></td>
                <td colspan="2" style="width:40%;"><b>@SharedLocalizer.GetLocalizedHtmlString("Drilling Information")</b></td>
            </tr>

            <tr>
                <td>@Html.DisplayNameFor(Model => Model.Borerig)</td>
                <td>@Html.DisplayFor(Model => Model.Borerig)</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(Model => Model.Boringstype)</td>
                <td>@Html.DisplayFor(Model => Model.Boringstype)</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(Model => Model.Boremetode)</td>
                <td>@Html.DisplayFor(Model => Model.Boremetode)</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(Model => Model.Belaegning)</td>
                <td>@Html.DisplayFor(Model => Model.Belaegning)</td>
            </tr>
            <tr>
                <td>@SharedLocalizer.GetLocalizedHtmlString("Project Nr")</td>
                <td>@Html.DisplayFor(Model => Model.Project.ProjectNr)</td>
                <td colspan="2"><b>@SharedLocalizer.GetLocalizedHtmlString("Permits")</b></td>
            </tr>
            <tr>
                <td>@SharedLocalizer.GetLocalizedHtmlString("Contact Person")</td>
                <td>@Html.DisplayFor(Model => Model.Project.Responsible_Person)</td>
                <td>@Html.DisplayNameFor(Model => Model.Boretilladelse)</td>
                <td>@Html.DisplayFor(Model => Model.Boretilladelse)</td>
            </tr>
            <tr>
                <td>@SharedLocalizer.GetLocalizedHtmlString("Date")</td>
                <td>@string.Format("{0:yyyy-MM-dd}", Model.Date)</td>
                <td>@Html.DisplayNameFor(Model => Model.Gravetilladelse)</td>
                <td>@Html.DisplayFor(Model => Model.Gravetilladelse)</td>
            </tr>
            <tr>
                <td>@SharedLocalizer.GetLocalizedHtmlString("Address")</td>
                @if (Model.Address == null || Model.Address == "")
                {
                    <td>@Html.DisplayFor(Model => Model.Project.Address)</td>
                }
                else
                {
                    <td>@Html.DisplayFor(Model => Model.Address)</td>
                }
                <td>@Html.DisplayNameFor(Model => Model.RaadenOverVej)</td>
                <td>@Html.DisplayFor(Model => Model.RaadenOverVej)</td>
            </tr>
            <tr>
                <td>@SharedLocalizer.GetLocalizedHtmlString("Drill Place")</td>
                <td>@Html.DisplayFor(Model => Model.DrillPlace) </td>
                <td>@Html.DisplayNameFor(Model => Model.Ledningsoplysninger)</td>
                <td>@Html.DisplayFor(Model => Model.Ledningsoplysninger)</td>
            </tr>
            <tr>
                <td>@SharedLocalizer.GetLocalizedHtmlString("Well ID")</td>
                <td>@Html.DisplayFor(Model => Model.WellID) </td>
                <td>@Html.DisplayNameFor(Model => Model.Afledningstilladelse)</td>
                <td>@Html.DisplayFor(Model => Model.Afledningstilladelse)</td>
            </tr>
            <tr>
                @if (Model.ToFiltre.Equals(true))
                {
                    <td colspan="2" rowspan="50" style="width:100%">
                        <table id="myTable" style="width:100%;height:800px;margin-left:auto;margin-right:auto;table-layout:fixed;border-collapse:unset;">
                            @{
                                int counter1 = 0;
                                int counter7 = 0;
                                decimal[] percents = Model.Layers.Select(x => x.Percent).ToArray();
                                
                            }
                            @for (int i = 1; i <= 100; i++)
                            {
                            <tr id="row_@i">
                                @for (int j = 1; j <= 7; j++)
                                {
                                    int sum1 = 1;
                                    int sum7 = 1;
                                    for (int n = 0; n <= counter1; n++)
                                    {
                                        sum1 += Convert.ToInt32(percents[n]);
                                    }
                                    for (int n = 0; n <= counter7; n++)
                                    {
                                        sum7 += Convert.ToInt32(percents[n]);
                                    }
                                    if (Model.ToFiltre)
                                    {

                                        if (j == 1 || j == 7)
                                        {
                                            if (i == 1)
                                            {
                                                if (j == 1)
                                                {
                                                    <td id="cell_@String.Concat(i.ToString(),"_",j.ToString())" rowspan="@Convert.ToInt32(percents[counter1])" class="Layer" style="width:20%;word-break:break-word;border-top:none;border-left:none;border-right:none;text-align:center;">@Model.Layers.ElementAt(counter1).Layer.LayerType</td>

                                                    counter1 += 1;
                                                }
                                                else
                                                {
                                                    <td id="cell_@String.Concat(i.ToString(),"_",j.ToString())" rowspan="@Convert.ToInt32(percents[counter7])" class="Layer" style="width:20%;word-break:break-word;border-top:none;border-left:none;border-right:none;text-align:center;">@Model.Layers.ElementAt(counter7).Layer.LayerType</td>
                                                    counter7 += 1;
                                                }

                                            }
                                            else
                                            {
                                                if (j == 1)
                                                {
                                                    if (i == (sum1 - Convert.ToInt32(percents[counter1])))
                                                    {
                                                        if (Model.Layers.ElementAt(counter1).Layer.LayerType == "Bund af Brønd")
                                                        {
                                                            @if (j == 1)
                                                            {
                                                                <td id="cell_@String.Concat(i.ToString(),"_",j.ToString())" colspan="7" rowspan="@Convert.ToInt32(percents[counter1])" class="Layer" style="color:white;background-color:black;word-break:break-word;border-top:none;border-left:none;border-right:none;text-align:center;">@Model.Layers.ElementAt(counter1).Layer.LayerType</td>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <td id="cell_@String.Concat(i.ToString(),"_",j.ToString())" rowspan="@Convert.ToInt32(percents[counter1])" class="Layer" style="word-break:break-word;border-top:none;border-left:none;border-right:none;text-align:center;">@Model.Layers.ElementAt(counter1).Layer.LayerType</td>
                                                            counter1 += 1;
                                                        }

                                                    }
                                                }
                                                else
                                                {
                                                    if (i == (sum7 - Convert.ToInt32(percents[counter7])))
                                                    {
                                                        if (Model.Layers.ElementAt(counter7).Layer.LayerType == "Bund af Brønd")
                                                        {
                                                            
                                                        }
                                                        else
                                                        {
                                                            <td id="cell_@String.Concat(i.ToString(),"_",j.ToString())" rowspan="@Convert.ToInt32(percents[counter7])" class="Layer" style="word-break:break-word;border-top:none;border-left:none;border-right:none;text-align:center;">@Model.Layers.ElementAt(counter7).Layer.LayerType</td>
                                                            counter7 += 1;
                                                        }

                                                    }
                                                }

                                            }
                                        }

                                        else if ((j == 2 || j == 4 || j == 6) && i < 100)
                                        {
                                            @if (i == 1)
                                            {
                                                if (j == 2 || j == 6)
                                                {
                                                    <td id="cell_@String.Concat(i.ToString(),"_",j.ToString())"  style="width:15%;word-break:break-all;border-top:none;"></td>
                                                }
                                                else
                                                {
                                                    <td id="cell_@String.Concat(i.ToString(),"_",j.ToString())"  style="width:10%;word-break:break-all;border-top:none;"></td>
                                                }

                                            }
                                            else
                                            {
                                                <td id="cell_@String.Concat(i.ToString(),"_",j.ToString())" class="Grus" style="word-break:break-all;border-top:none;"></td>
                                            }

                                        }
                                        else if (j == 3 && i < 100)
                                        {
                                            if (i == 1)
                                            {
                                                <td id="cell_@String.Concat(i.ToString(),"_",j.ToString())" class="Pipe" style="width:10%;word-break:break-all;border-top:none;"></td>
                                            }
                                            else
                                            {
                                                <td id="cell_@String.Concat(i.ToString(),"_",j.ToString())" class="Grus" style="word-break:break-all;border-top:none;"></td>
                                            }

                                        }
                                        else if (j == 5 && i < 100)
                                        {
                                            if (i == 1)
                                            {
                                                <td id="cell_@String.Concat(i.ToString(),"_",j.ToString())" class="Pipe" style="width:10%;word-break:break-all;border-top:none;"></td>
                                            }
                                            else
                                            {
                                                <td id="cell_@String.Concat(i.ToString(),"_",j.ToString())" class="Grus" style="word-break:break-all;border-top:none;"></td>
                                            }
                                        }

                                    }


                                }
                            </tr>
                            }
                        </table>
                    </td>
                    <td>@Html.DisplayNameFor(Model => Model.Forgravning)</td>
                    <td>@Html.DisplayFor(Model => Model.Forgravning)</td>
                }
                else
                {
                    <td colspan="2" rowspan="60" style="width:100%;"> <table id="myTable" style=" width:100%;height:1000px;margin-left:auto;margin-right:auto;table-layout:border-collapse:unset;"></table></td>
                    <td>@Html.DisplayNameFor(Model => Model.Forgravning)</td>
                    <td>@Html.DisplayFor(Model => Model.Forgravning)</td>
                }
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(Model => Model.Reetablering)</td>
                <td>@Html.DisplayFor(Model => Model.Reetablering)</td>
            </tr>
            <tr>
                <td colspan="2"><b>@SharedLocalizer.GetLocalizedHtmlString("Filters and Gravel")</b></td>
            </tr>
            @if (Model.ToFiltre.Equals(true))
            {
                <tr>
                    <td>@Html.DisplayNameFor(Model => Model.Filter1_Dim)</td>
                    <td>@Html.DisplayFor(Model => Model.Filter1_Dim)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(Model => Model.Filter2_Dim)</td>
                    <td>@Html.DisplayFor(Model => Model.Filter2_Dim)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(Model => Model.Filterroer1)</td>
                    <td>@Html.DisplayFor(Model => Model.Filterroer1)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(Model => Model.Filterroer2)</td>
                    <td>@Html.DisplayFor(Model => Model.Filterroer2)</td>
                </tr>
                @if (Model.BlindPipe1.Equals(true))
                {
                    <tr>
                        <td>@Html.DisplayNameFor(Model => Model.Blindroer1)</td>
                        <td>@Html.DisplayFor(Model => Model.Blindroer1)</td>
                    </tr>
                }
                @if (Model.BlindPipe2.Equals(true))
                {
                    <tr>
                        <td>@Html.DisplayNameFor(Model => Model.Blindroer2)</td>
                        <td>@Html.DisplayFor(Model => Model.Blindroer2)</td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>@Html.DisplayNameFor(Model => Model.Blindroer2)</td>
                        <td>@SharedLocalizer.GetLocalizedHtmlString("No")</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td>@Html.DisplayNameFor(Model => Model.Filter1_Dim)</td>
                    <td>@Html.DisplayFor(Model => Model.Filter1_Dim)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(Model => Model.Filterroer1)</td>
                    <td>@Html.DisplayFor(Model => Model.Filterroer1)</td>
                </tr>
                @if (Model.BlindPipe1.Equals(true))
                {
                    <tr>
                        <td>@Html.DisplayNameFor(Model => Model.Blindroer1)</td>
                        <td>@Html.DisplayFor(Model => Model.Blindroer1)</td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>@Html.DisplayNameFor(Model => Model.Blindroer1)</td>
                        <td>@SharedLocalizer.GetLocalizedHtmlString("No")</td>
                    </tr>
                }
            }

            <tr>
                <td>@Html.DisplayNameFor(Model => Model.Filterslidser)</td>
                <td>@Html.DisplayFor(Model => Model.Filterslidser)</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(Model => Model.Grustype)</td>
                <td>@Html.DisplayFor(Model => Model.Grustype)</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(Model => Model.Taetningsringe)</td>
                <td>@Html.DisplayFor(Model => Model.Taetningsringe)</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(Model => Model.Filterstyr)</td>
                <td>@Html.DisplayFor(Model => Model.Filterstyr)</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(Model => Model.Forsegling)</td>
                <td>@Html.DisplayFor(Model => Model.Forsegling)</td>
            </tr>
            <tr rowspan="5">
                <td>@Html.DisplayNameFor(Model => Model.Registrering)</td>
                <td>@Html.DisplayFor(Model => Model.Registrering)</td>
            </tr>
            <tr>
                <td colspan="2"><b>@SharedLocalizer.GetLocalizedHtmlString("Remarks")</b></td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(Model => Model.ProeveFrekvens)</td>
                <td>1 @SharedLocalizer.GetLocalizedHtmlString("Sample pr.") @Html.DisplayFor(Model => Model.ProeveFrekvens) m (@SharedLocalizer.GetLocalizedHtmlString("However, at least 1 sample per. layer")</td>
            </tr>
            <tr>
                <td colspan="2"><b>Filter 1</b></td>
            </tr>
            @if (Model.Filter1_Layers.ElementAt(0).Under == 0 && Model.Filter1_Layers.ElementAt(0).Over == 0 && Model.Filter1_Laengde > 0)
            {
                <tr>
                    <td colspan="2">
                        @Model.Filter1_Laengde m @SharedLocalizer.GetLocalizedHtmlString("in") @Model.Layers.ElementAt(Convert.ToInt32(Model.Filter1_Layers.ElementAt(0).LayerTypeUnderId - 1)).Layer.LayerType
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td>@Html.DisplayFor(Model => Model.Filter1_Layers.ElementAt(0).Under) m under @Model.Layers.ElementAt(Convert.ToInt32(Model.Filter1_Layers.ElementAt(0).LayerTypeUnderId - 1)).Layer.LayerType</td>
                    <td>@Html.DisplayFor(Model => Model.Filter1_Layers.ElementAt(0).Over) m over @Model.Layers.ElementAt(Convert.ToInt32(Model.Filter1_Layers.ElementAt(0).LayerTypeOverId - 1)).Layer.LayerType</td>
                </tr>
                @if (Model.Filter1_Laengde > 0)
                {
                    <tr>
                        <td>@Html.DisplayNameFor(Model => Model.Filter1_Laengde)</td>
                        <td>@Html.DisplayFor(Model => Model.Filter1_Laengde) m</td>
                    </tr>
                }
            }
            @if (Model.BlindPipe1.Equals(true))
            {
                <tr>
                    <td>@Html.DisplayNameFor(Model => Model.BlindPipe1m)</td>
                    <td>@Html.DisplayFor(Model => Model.BlindPipe1m) m</td>
                </tr>
            }
            @if (Model.ToFiltre.Equals(true))
            {
                <tr>
                    <td colspan="2"><b>Filter 2</b></td>
                </tr>
                @if (Model.Filter2_Layers.ElementAt(0).Under == 0 && Model.Filter2_Layers.ElementAt(0).Over == 0 && Model.Filter2_Laengde > 0)
                {
                    <tr>
                        <td colspan="2">
                            @Model.Filter2_Laengde m @SharedLocalizer.GetLocalizedHtmlString("in") @Model.Layers.ElementAt(Convert.ToInt32(Model.Filter2_Layers.ElementAt(0).LayerTypeUnderId - 1)).Layer.LayerType
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>@Html.DisplayFor(Model => Model.Filter2_Layers.ElementAt(0).Under) m under @Model.Layers.ElementAt(Convert.ToInt32(Model.Filter2_Layers.ElementAt(0).LayerTypeUnderId - 1)).Layer.LayerType</td>
                        <td>@Html.DisplayFor(Model => Model.Filter2_Layers.ElementAt(0).Over) m over @Model.Layers.ElementAt(Convert.ToInt32(Model.Filter2_Layers.ElementAt(0).LayerTypeOverId - 1)).Layer.LayerType</td>
                    </tr>
                    @if (Model.Filter2_Laengde > 0)
                    {
                        <tr>
                            <td>@Html.DisplayNameFor(Model => Model.Filter2_Laengde)</td>
                            <td>@Html.DisplayFor(Model => Model.Filter2_Laengde) m</td>
                        </tr>
                    }
                }
                @if (Model.BlindPipe2.Equals(true))
                {
                    <tr>
                        <td>@Html.DisplayNameFor(Model => Model.BlindPipe2m)</td>
                        <td>@Html.DisplayFor(Model => Model.BlindPipe2m) m</td>
                    </tr>
                }
            }
            <tr>
                <td colspan="2"><b>@SharedLocalizer.GetLocalizedHtmlString("Bentonite Layers")</b></td>
            </tr>
            @foreach (var item in Model.BentoniteLayers)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Under) m under @Model.Layers.ElementAt(Convert.ToInt32(item.LayerTypeUnderId - 1)).Layer.LayerType</td>
                    <td>@Html.DisplayFor(modelItem => item.Over) m over @Model.Layers.ElementAt(Convert.ToInt32(item.LayerTypeOverId - 1)).Layer.LayerType</td>
                </tr>
            }
            <tr>
                <td>@Html.DisplayNameFor(Model => Model.BoreDybde)</td>
                <td>@Html.DisplayFor(Model => Model.BoreDybde) m Max</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(Model => Model.DoneBy)</td>
                <td>@Html.DisplayFor(Model => Model.DoneBy)</td>
            </tr>
        </table>
        <table hidden="hidden" style="width:100%;table-layout:fixed;">

            <tr>
                <td><label asp-for="ToFiltre" class="control-label"></label></td>
                <td><input asp-for="ToFiltre" checked="checked" onclick="$(this).val(this.checked ? true : false)" /></td>
            </tr>

            <tr class="roer2">
                <td><input asp-for="Filter1_Dim" class="form-control" /></td>
                <td><input asp-for="Filter2_Dim" class="form-control" /></td>
            </tr>
            <tr class="roer2">
                <td><input asp-for="Blindroer1" class="form-control" /></label></td>
                <td><input asp-for="Blindroer2" class="form-control" /></td>
            </tr>
            <tr class="roer2">
                <td><input asp-for="Filterroer1" class="form-control" />1</td>
                <td><input asp-for="Filterroer2" class="form-control" /></td>
            </tr>
            <tr>
                <td><label asp-for="Filter1_Laengde" class="control-label"></label></td>
                <td><input asp-for="Filter1_Laengde" type="number" step="0.01" class="form-control" /></td>
            </tr>
            <tr>
                <td><label asp-for="Filter2_Laengde" class="control-label"></label></td>
                <td><input asp-for="Filter2_Laengde" type="number" step="0.01" class="form-control" /></td>
            </tr>
        </table>
    </div>
    <table hidden="hidden">
        <tr>
            <td rowspan="2" style="width:33%;">
                <table style="width:100%;border:medium;">
                    <thead>
                        <tr>
                            <th colspan="3" style="width:100%;text-align:center;"></th>
                        </tr>
                        <tr>
                            <th style="width:70%;"></th>
                            <th style="width:30%;">@SharedLocalizer.GetLocalizedHtmlString("Layer % of drawing")</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ int LayerNumberVar = 1;}
                        @foreach (var item in Model.Layers)
                        {
                            <tr>
                                <td>
                                <input asp-for="@item.LayerId" id="Layer_@LayerNumberVar" />
                                @*<select asp-for="@item.LayerId" asp-items="ViewBag.Layers" style="width:100%;" id="Layer_@LayerNumberVar"><option value="">@SharedLocalizer.GetLocalizedHtmlString("Choose Layer Type")</option></select></td>*@
                                <td>
                                    <input asp-for="@item.Percent" type="number" id="Percent_@LayerNumberVar" step="1" max="100" min="0" /><input asp-for="@item.LayerNumber" style="width:100%;" id="LayerNumber_@LayerNumberVar" hidden="hidden" />
                                </td>
                            </tr>

                            LayerNumberVar += 1;
                        }
                    </tbody>
                </table>
            </td>
            <td rowspan="2" style="width:33%;">
                <table style="width:100%;border:medium;">
                    <tbody>

                        @{ int BentoniteNumberVar = 1;}
                        @foreach (var item in Model.BentoniteLayers)
                        {
                        <tr>

                            <td><input asp-for="@item.Under" type="number" step="0.01" style="width:100%" id="Under_@BentoniteNumberVar" /></td>
                            <td><select asp-for="@item.LayerTypeUnderId" asp-items="@(new SelectList(Model.Layers, "LayerId", "LayerNumber"))" id="BentoniteUnder_@BentoniteNumberVar" style="width:100%">
                                    <option value="">NOT USED</option>
                                </select></td>

                            <td><input asp-for="@item.Over" type="number" step="0.01" style="width:100%" id="Over_@BentoniteNumberVar" /></td>
                            <td><select asp-for="@item.LayerTypeOverId" asp-items="@(new SelectList(Model.Layers, "LayerId", "LayerNumber"))" id="BentoniteOver_@BentoniteNumberVar" style="width:100%">
                                <option value="">NOT USED</option>
                                </select></td>

                        </tr>
                            BentoniteNumberVar += 1;
                        }
                    </tbody>
                </table>
            </td>
            <td style="width:33%;">
                <table style="width:100%;border:medium;">
                    <tbody>

                        @{ int Filter1NumberVar = 1;}
                        @foreach (var item in Model.Filter1_Layers)
                        {
                        <tr>
                            <td><input asp-for="@item.Under" type="number" step="0.01" style="width:100%" id="Filter1mUnder_@Filter1NumberVar" /></td>
                            <td><select asp-for="@item.LayerTypeUnderId" asp-items="@(new SelectList(Model.Layers, "LayerId", "LayerNumber"))" id="Filter1Under_@Filter1NumberVar" style="width:100%">
                                    <option value="">NOT USED</option></select></td>
                            <td><input asp-for="@item.Over" type="number" step="0.01" style="width:100%" id="Filter1mOver_@Filter1NumberVar" /></td>
                             <td><select asp-for="@item.LayerTypeOverId" asp-items="@(new SelectList(Model.Layers, "LayerId", "LayerNumber"))" id="Filter1Over_@Filter1NumberVar" style="width:100%">
                                     <option value="">NOT USED</option>
                                 </select></td>
                            <td><input asp-for="@item.Length" type="number" step="0.01" style="width:100%" id="Filter1m_@Filter1NumberVar" /></td>
                        </tr>
                            Filter1NumberVar += 1;
                        }
                        <tr>
                            <td></td>
                            <td><input asp-for="BlindPipe1" type="checkbox" /></td>
                            <td></td>
                            <td><input asp-for="BlindPipe1m" type="number" step="0.01" min="0" max="100" /></td>
                        </tr>
                    </tbody>
                </table>
            </td>
        </tr>
        <tr>
            <td>
                <table style="width:100%;border:medium;">
                    
                    <tbody>

                        @{ int Filter2NumberVar = 1;}

                        @foreach (var item in Model.Filter2_Layers)
                        {
                        <tr>
                            <td><input asp-for="@item.Under" type="number" step="0.01" style="width:100%" id="Filter2mUnder_@Filter2NumberVar" /></td>
                            <td><select asp-for="@item.LayerTypeUnderId" asp-items="@(new SelectList(Model.Layers, "LayerId", "LayerNumber"))" id="Filter2Under_@Filter2NumberVar" style="width:100%">
                                    <option value="">NOT USED</option>
                                </select></td>
                            <td><input asp-for="@item.Over" type="number" step="0.01" style="width:100%" id="Filter2mOver_@Filter2NumberVar" /></td>
                            <td><select asp-for="@item.LayerTypeOverId" asp-items="@(new SelectList(Model.Layers, "LayerId", "LayerNumber"))" id="Filter2Over_@Filter2NumberVar" style="width:100%">
                                    <option value="">NOT USED</option>
                                </select></td>
                            <td><input asp-for="@item.Length" type="number" step="0.01" style="width:100%" id="Filter2m_@Filter2NumberVar" /></td>
                        </tr>
                            Filter2NumberVar += 1;
                        }
                        <tr>
                            <td><input asp-for="BlindPipe2" type="checkbox" /></td>
                            <td><input asp-for="BlindPipe2m" type="number" step="0.01" min="0" max="100" /></td>
                        </tr>
                    </tbody>
                </table>
            </td>
        </tr>
    </table>
    <div id="test"></div>
    <div id="test2"></div>
    <script>
        var endofpipe1 = 0;
        var endofpipe2 = 0;
        var filtercount = @Model.Filter1_Layers.Count();
        var layercount = @Model.Layers.Count();
        var filter1count = @Model.Filter1_Layers.Count();
        var filter2count = @Model.Filter2_Layers.Count();
        var bentonitecount = @Model.BentoniteLayers.Count();
        $(document).ready(function () {
            $(function () {
                BuildTable();
            });
        });
        function BuildTable() {
            var twofilters = $("#ToFiltre").val();
            BuildFilter1();
            
            if (twofilters == "true") {
                BuildFilter2();
            }
            
            CreatePipe1();
            
            if (twofilters == "true") {
                CreatePipe2();
            }
            
            BuildBentonite();
            var tmp = document.createElement('div');
            tmp.innerHTML = 'Aloha bentonit';
            $('#test').html(tmp);
            MergeGrus();
           
            InsertGravelAgain();
            var tmp = document.createElement('div');
            tmp.innerHTML = 'Aloha Done';
            $('#test').html(tmp);
            PutColours();
            var tmp = document.createElement('div');
            tmp.innerHTML = 'Aloha Done 2';
            $('#test').html(tmp);


        }


        function BuildBentonite() {
            var thetext = "";
            for (i = 1; i <= bentonitecount; i++) {
                var underindex = +$("#BentoniteUnder_" + i + " option:selected").text() -1;
                var overindex = +$("#BentoniteOver_" + i + " option:selected").text() -1;
                var under = +$("#Under_" + i).val();
                var over = +$("#Over_" + i).val();
                var twofilters = $("#ToFiltre").val();
                var Bentoniteunderlayerid = $("#BentoniteUnder_" + i + " option:selected").val();
                var Bentoniteoverlayerid = $("#BentoniteOver_" + i + " option:selected").val();
               
                
                if (Bentoniteunderlayerid != null && Bentoniteoverlayerid != null) {

                    var startsum = 0;
                    var endsum = 0;
                    if (overindex > underindex) {
                        
                        if (under > 0) {
                            for (j = 1; j <= Bentoniteunderlayerid; j++) {
                                startsum += +$("#Percent_" + j).val();
                            }
                        }
                        else {
                            for (j = 1; j < Bentoniteunderlayerid; j++) {
                                startsum += +$("#Percent_" + j).val();
                            }
                        }
                        
                        for (j = 1; j < Bentoniteoverlayerid; j++) {
                            endsum += +$("#Percent_" + j).val();
                        }
                        if (startsum < 1) {
                            startsum += 1;
                        }
                        
                        if (over > 0) {
                            cell22 = document.getElementById("cell_" + endsum + "_" + 2);
                            cell44 = document.getElementById("cell_" + endsum + "_" + 4);
                            if (twofilters == "true") {
                                cell66 = document.getElementById("cell_" + endsum + "_" + 6);
                                cell66.innerHTML = over + " m";
                                cell66.setAttribute('class', 'GrusA');
                            }
                            cell22.innerHTML = over + " m";
                            cell44.innerHTML = over + " m";

                            cell22.setAttribute('class', 'GrusA');
                            cell44.setAttribute('class', 'GrusA');
                        }
                        
                        if (under > 0) {
                            startsum += 1;
                            cell221 = document.getElementById("cell_" + startsum + "_" + 2);
                            cell441 = document.getElementById("cell_" + startsum + "_" + 4);
                            if (twofilters == "true") {
                                cell661 = document.getElementById("cell_" + startsum + "_" + 6);
                                cell661.innerHTML = under + " m";
                                cell661.setAttribute('class', 'GrusA');
                            }
                            cell221.innerHTML = under + " m";
                            cell441.innerHTML = under + " m";
                            cell221.setAttribute('class', 'GrusA');
                            cell441.setAttribute('class', 'GrusA');
                        }
                        
                        if (over > 0) {
                          
                            for (k = (startsum + 2); k <= endsum - 1; k++) {
                                if (startsum + 2 > endofpipe1) {
                                    celltoremove3 = document.getElementById("cell_" + k + "_" + 3);
                                    celltoremove3.parentNode.removeChild(celltoremove3);
                                }
                                if (twofilters == "true") {
                                    if (startsum + 2 > endofpipe2) {
                                        celltoremove5 = document.getElementById("cell_" + k + "_" + 5);
                                        celltoremove5.parentNode.removeChild(celltoremove5);
                                    }
                                    celltoremove6 = document.getElementById("cell_" + k + "_" + 6);
                                    celltoremove6.parentNode.removeChild(celltoremove6);
                                }
                                celltoremove2 = document.getElementById("cell_" + k + "_" + 2);
                                celltoremove4 = document.getElementById("cell_" + k + "_" + 4);
                                celltoremove2.parentNode.removeChild(celltoremove2);
                                celltoremove4.parentNode.removeChild(celltoremove4);

                            }
                        }
                        else {
                            
                            for (k = startsum + 2; k <= endsum; k++) {
                                if (startsum + 2 > endofpipe1) {
                                    celltoremove3 = document.getElementById("cell_" + k + "_" + 3);
                                    celltoremove3.parentNode.removeChild(celltoremove3);
                                }
                                if (twofilters == "true") {
                                    if (startsum + 2 > endofpipe2) {
                                        celltoremove5 = document.getElementById("cell_" + k + "_" + 5);
                                        celltoremove5.parentNode.removeChild(celltoremove5);
                                    }
                                    celltoremove6 = document.getElementById("cell_" + k + "_" + 6);
                                    celltoremove6.parentNode.removeChild(celltoremove6);
                                }
                                celltoremove2 = document.getElementById("cell_" + k + "_" + 2);
                                celltoremove4 = document.getElementById("cell_" + k + "_" + 4);

                                celltoremove2.parentNode.removeChild(celltoremove2);
                                celltoremove4.parentNode.removeChild(celltoremove4);

                            }
                        }
                        
                        
                        cell2 = document.getElementById("cell_" + (startsum + 1) + "_" + 2);
                        cell4 = document.getElementById("cell_" + (startsum + 1) + "_" + 4);
                        if (twofilters == "true") {
                            cell6 = document.getElementById("cell_" + (startsum + 1) + "_" + 6);
                        }
                        if ((startsum + 1) == endofpipe1 && document.getElementById("cell_" + endofpipe1 + "_" + 3).className == "Blind") {

                            cell3 = document.getElementById("cell_" + (startsum + 1) + "_" + 3);
                            cell3.rowSpan = (endsum - startsum - 1);
                            cell3.setAttribute('class', 'Blind');
                            cell3.innerHTML = $("#BlindPipe1m").val() + " m";
                        }
                        else if (startsum + 2 > endofpipe1) { //this is new instead of commented out below

                            cell3 = document.getElementById("cell_" + (startsum + 1) + "_" + 3);
                        }
                        
                        if (twofilters == "true") {
                            if ((startsum + 1) == endofpipe2 && document.getElementById("cell_" + endofpipe2 + "_" + 5).className == "Blind") {

                                cell5 = document.getElementById("cell_" + (startsum + 1) + "_" + 5);
                                cell5.rowSpan = (endsum - startsum - 1);
                                cell5.setAttribute('class', 'Blind');
                                cell5.innerHTML = $("#BlindPipe2m").val() + " m";
                            }
                            else if (startsum + 2 > endofpipe2) {

                                cell5 = document.getElementById("cell_" + (startsum + 1) + "_" + 5);
                                cell5.rowSpan = (endsum - startsum - 1);
                                cell5.setAttribute('class', 'Bentonite');
                                cell5.innerHTML = "Bentonit";
                            }
                        }
                        
                        if (over > 0) {
                            
                            
                            cell2.rowSpan = (endsum - startsum - 1);
                            cell4.rowSpan = (endsum - startsum - 1);
                            if (twofilters == "true") {
                                cell6.rowSpan = (endsum - startsum - 1);
                            }
                            
                            if (startsum + 2 > endofpipe1) {
                                cell3.rowSpan = (endsum - startsum - 1);
                                if ((startsum + 1) == endofpipe1 && document.getElementById("cell_" + endofpipe1 + "_" + 3).className == "Blind") {
                                }
                                else {
                                    cell3.setAttribute('class', 'Bentonite');
                                    cell3.innerHTML = "Bentonit"
                                }
                            }
                            
                            if (twofilters == "true") {
                                if (startsum + 2 > endofpipe2) {
                                    cell5.rowSpan = (endsum - startsum - 1);
                                    if ((startsum + 1) == endofpipe2 && document.getElementById("cell_" + endofpipe2 + "_" + 3).className == "Blind") {
                                    }
                                    else {
                                        cell5.setAttribute('class', 'Bentonite');
                                        cell5.innerHTML = "Bentonit"
                                    }
                                }
                            }
                            
                        }
                        else {
                            
                            cell2.rowSpan = (endsum - startsum);
                            cell4.rowSpan = (endsum - startsum);
                            if (twofilters == "true") {
                                cell6.rowSpan = (endsum - startsum);
                            }
                            if (startsum + 2 > endofpipe1) {
                                cell3.rowSpan = (endsum - startsum);
                                if ((startsum + 1) == endofpipe1 && document.getElementById("cell_" + endofpipe1 + "_" + 3).className == "Blind") {
                                }
                                else {
                                    cell3.setAttribute('class', 'Bentonite');
                                    cell3.innerHTML = "Bentonit";
                                }
                            }
                            if (twofilters == "true") {
                                if (startsum + 2 > endofpipe2) {
                                    cell5.rowSpan = (endsum - startsum);
                                    if ((startsum + 1) == endofpipe2 && document.getElementById("cell_" + endofpipe2 + "_" + 3).className == "Blind") {
                                    }
                                    else {
                                        cell5.setAttribute('class', 'Bentonite');
                                        cell5.innerHTML = "Bentonit";
                                    }
                                }
                            }
                        }
                        
                        cell2.setAttribute('class', 'Bentonite');
                        cell4.setAttribute('class', 'Bentonite');
                        if (twofilters == "true") {
                            cell6.setAttribute('class', 'Bentonite');
                            cell6.innerHTML = "Bentonit";
                        }
                        cell2.innerHTML = "Bentonit";
                        cell4.innerHTML = "Bentonit";
                    }
                    else { //under > over
                        if (over > 0) {
                            for (j = 1; j < Bentoniteoverlayerid; j++) {
                                startsum += +$("#Percent_" + j).val();
                            }
                            startsum -= 1;
                        }
                        else {
                            for (j = 1; j <= Bentoniteoverlayerid; j++) {
                                startsum += +$("#Percent_" + j).val();
                            }
                        }
                        if (under > 0) {
                            for (j = 1; j <= Bentoniteunderlayerid; j++) {
                                endsum += +$("#Percent_" + j).val();
                            }
                            endsum += 1;
                        }
                        else {
                            for (j = 1; j <= Bentoniteunderlayerid; j++) {
                                endsum += +$("#Percent_" + j).val();
                            }
                        }
                        if (startsum < 1) { //in case nothing is there.
                            startsum += 1;
                        }
                        if (under > 0) { //create arrows on gravel
                            addingunder = true;
                            cell22 = document.getElementById("cell_" + endsum + "_" + 2);
                            cell44 = document.getElementById("cell_" + endsum + "_" + 4);
                            if (twofilters == "true") {
                                cell66 = document.getElementById("cell_" + endsum + "_" + 6);
                                cell66.innerHTML = under + " m";
                                cell66.setAttribute('class', 'BentoniteA');
                            }
                            cell22.innerHTML = under + " m";
                            cell44.innerHTML = under + " m";
                            cell22.setAttribute('class', 'BentoniteA');
                            cell44.setAttribute('class', 'BentoniteA');
                        }
                        if (over > 0) {
                            addingover = true;
                            startsum += 1;
                            cell221 = document.getElementById("cell_" + startsum + "_" + 2);
                            cell441 = document.getElementById("cell_" + startsum + "_" + 4);
                            if (twofilters == "true") {
                                cell661 = document.getElementById("cell_" + startsum + "_" + 6);
                                cell661.innerHTML = over + " m";
                                cell661.setAttribute('class', 'BentoniteA');
                            }
                            cell221.innerHTML = over + " m";
                            cell441.innerHTML = over + " m";
                            cell221.setAttribute('class', 'BentoniteA');
                            cell441.setAttribute('class', 'BentoniteA');
                        }
                        if (under > 0) {
                            for (k = (startsum + 2); k <= endsum - 1; k++) {
                                if (startsum + 2 > endofpipe1) {
                                    celltoremove3 = document.getElementById("cell_" + k + "_" + 3);
                                    celltoremove3.parentNode.removeChild(celltoremove3);
                                }
                                if (twofilters == "true") {
                                    if (startsum + 2 > endofpipe2) {
                                        celltoremove5 = document.getElementById("cell_" + k + "_" + 5);
                                        celltoremove5.parentNode.removeChild(celltoremove5);
                                    }
                                    celltoremove6 = document.getElementById("cell_" + k + "_" + 6);
                                    celltoremove6.parentNode.removeChild(celltoremove6);
                                }
                                celltoremove2 = document.getElementById("cell_" + k + "_" + 2);
                                celltoremove4 = document.getElementById("cell_" + k + "_" + 4);
                                celltoremove2.parentNode.removeChild(celltoremove2);
                                celltoremove4.parentNode.removeChild(celltoremove4);
                            }

                        }
                        else {
                            for (k = startsum + 2; k <= endsum; k++) {
                                if (startsum + 2 > endofpipe1) {
                                    celltoremove3 = document.getElementById("cell_" + k + "_" + 3);
                                    celltoremove3.parentNode.removeChild(celltoremove3);
                                }
                                if (twofilters == "true") {
                                    if (startsum + 2 > endofpipe2) {
                                        celltoremove5 = document.getElementById("cell_" + k + "_" + 5);
                                        celltoremove5.parentNode.removeChild(celltoremove5);
                                    }
                                    celltoremove6 = document.getElementById("cell_" + k + "_" + 6);
                                    celltoremove6.parentNode.removeChild(celltoremove6);
                                }
                                celltoremove2 = document.getElementById("cell_" + k + "_" + 2);
                                celltoremove4 = document.getElementById("cell_" + k + "_" + 4);

                                celltoremove2.parentNode.removeChild(celltoremove2);
                                celltoremove4.parentNode.removeChild(celltoremove4);

                            }
                        }
                        cell2 = document.getElementById("cell_" + (startsum + 1) + "_" + 2);
                        cell4 = document.getElementById("cell_" + (startsum + 1) + "_" + 4);
                        if (twofilters == "true") {
                            cell6 = document.getElementById("cell_" + (startsum + 1) + "_" + 6);
                        }
                        if ((startsum + 1) == endofpipe1 && document.getElementById("cell_" + endofpipe1 + "_" + 3).className == "Blind") {

                            cell3 = document.getElementById("cell_" + (startsum + 1) + "_" + 3);
                            cell3.rowSpan = (endsum - startsum - 1);
                            cell3.setAttribute('class', 'Blind');
                            cell3.innerHTML = $("#BlindPipe1m").val() + " m";
                        }
                        else if (startsum + 2 > endofpipe1) { //this is new instead of commented out below

                            cell3 = document.getElementById("cell_" + (startsum + 1) + "_" + 3);
                        }
                        if (twofilters == "true") {
                            if ((startsum + 1) == endofpipe2 && document.getElementById("cell_" + endofpipe2 + "_" + 5).className == "Blind") {

                                cell5 = document.getElementById("cell_" + (startsum + 1) + "_" + 5);
                                cell5.rowSpan = (endsum - startsum - 1);
                                cell5.setAttribute('class', 'Blind');
                                cell5.innerHTML = $("#BlindPipe2m").val() + " m";
                            }
                            else if (startsum + 2 > endofpipe2) {
                                cell5 = document.getElementById("cell_" + (startsum + 1) + "_" + 5);
                                cell5.rowSpan = (endsum - startsum - 1);
                                cell5.setAttribute('class', 'Bentonite');
                                cell5.innerHTML = "Bentonit";
                            }
                        }
                        if (under > 0) {
                            cell2.rowSpan = (endsum - startsum - 1);
                            cell4.rowSpan = (endsum - startsum - 1);
                            if (twofilters == "true") {
                                cell6.rowSpan = (endsum - startsum - 1);
                            }
                            if (startsum + 2 > endofpipe1) {
                                cell3.rowSpan = (endsum - startsum - 1);
                                if ((startsum + 1) == endofpipe1 && document.getElementById("cell_" + endofpipe1 + "_" + 3).className == "Blind") {
                                }
                                else {
                                    cell3.setAttribute('class', 'Bentonite');
                                    cell3.innerHTML = "Bentonit"
                                    cell3under = document.getElementById("cell_" + endsum + "_" + 3);
                                    cell3under.rowSpan = 1;
                                    cell3under.setAttribute('class', 'BentoniteA');
                                    cell3under.innerHTML = under + " m";
                                    if (over > 0) {
                                        cell3over = document.getElementById("cell_" + startsum + "_" + 3);
                                        cell3over.rowSpan = 1;
                                        cell3over.setAttribute('class', 'BentoniteA');
                                        cell3over.innerHTML = over + " m";
                                    }
                                }
                            }
                            if (twofilters == "true") {
                                if (startsum + 2 > endofpipe2) {
                                    cell5.rowSpan = (endsum - startsum - 1);
                                    if ((startsum + 1) == endofpipe2 && document.getElementById("cell_" + endofpipe2 + "_" + 3).className == "Blind") {
                                    }
                                    else {
                                        cell5.setAttribute('class', 'Bentonite');
                                        cell5.innerHTML = "Bentonit"
                                        cell5under = document.getElementById("cell_" + endsum + "_" + 5);
                                        cell5under.rowSpan = 1;
                                        cell5under.setAttribute('class', 'BentoniteA');
                                        cell5under.innerHTML = under + " m";
                                        if (over > 0) {
                                            cell5over = document.getElementById("cell_" + (startsum) + "_" + 5);
                                            cell5over.rowSpan = 1;
                                            cell5over.setAttribute('class', 'BentoniteA');
                                            cell5over.innerHTML = over + " m";
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            cell2.rowSpan = (endsum - startsum);
                            cell4.rowSpan = (endsum - startsum);
                            if (twofilters == "true") {
                                cell6.rowSpan = (endsum - startsum);
                            }
                            if (startsum + 2 > endofpipe1) {
                                cell3.rowSpan = (endsum - startsum);
                                if ((startsum + 1) == endofpipe1 && document.getElementById("cell_" + endofpipe1 + "_" + 3).className == "Blind") {
                                }
                                else {
                                    cell3.setAttribute('class', 'Bentonite');
                                    cell3.innerHTML = "Bentonit";
                                    if (over > 0) {
                                        cell3over = document.getElementById("cell_" + startsum + "_" + 3);
                                        cell3over.rowSpan = 1;
                                        cell3over.setAttribute('class', 'BentoniteA');
                                        cell3over.innerHTML = over + " m";
                                    }
                                }
                            }
                            if (twofilters == "true") {
                                if (startsum + 2 > endofpipe2) {
                                    cell5.rowSpan = (endsum - startsum);
                                    if ((startsum + 1) == endofpipe2 && document.getElementById("cell_" + endofpipe2 + "_" + 3).className == "Blind") {
                                    }
                                    else {
                                        cell5.setAttribute('class', 'Bentonite');
                                        cell5.innerHTML = "Bentonit";
                                        if (over > 0) {
                                            cell5over = document.getElementById("cell_" + (startsum) + "_" + 5);
                                            cell5over.rowSpan = 1;
                                            cell5over.setAttribute('class', 'BentoniteA');
                                            cell5over.innerHTML = over + " m";
                                        }
                                    }
                                }
                            }
                        }


                        cell2.setAttribute('class', 'Bentonite');
                        cell4.setAttribute('class', 'Bentonite');
                        if (twofilters == "true") {
                            cell6.setAttribute('class', 'Bentonite');
                            cell6.innerHTML = "Bentonit";
                        }
                        cell2.innerHTML = "Bentonit";
                        cell4.innerHTML = "Bentonit";
                    }
                }

            }
        }

        function getOffset(theid) {
            var lengthlayer = +$("#Percent_" + theid).val();
            if (lengthlayer <= 4) {
                return 0;
            }
            else if (lengthlayer <= 8) {
                return 1;
            }
            else if (lengthlayer <= 12) {
                return 2;
            }
            else if (lengthlayer <= 18) {
                return 3;
            }
            else if (lengthlayer <= 26) {
                return 4;
            }
            else {
                return 5;
            }
        }
        function BuildFilter1() {
            for (i = 1; i <= filtercount; i++)
            {
                var under = +$("#Filter1mUnder_" + i).val();
                var over = +$("#Filter1mOver_" + i).val();
                var laengde = +$("#Filter1m_" + i).val();
                var offset = 0;
                var offset1 = 0;
                var offset2 = 0;

                var Bentoniteunderlayerid = $("#Filter1Under_" + i + " option:selected").val();
                var Bentoniteoverlayerid = $("#Filter1Over_" + i + " option:selected").val();
                var startsum = 0;
                var endsum = 0;
                
                if (Bentoniteunderlayerid != null && Bentoniteoverlayerid != null && Bentoniteunderlayerid == Bentoniteoverlayerid) {
                    
                    if (laengde >= 0) {
                        offset = getOffset(Bentoniteunderlayerid);
                        for (j = 1; j < Bentoniteunderlayerid; j++) {
                            startsum += +$("#Percent_" + j).val();
                        }
                        for (j = 1; j <= Bentoniteoverlayerid; j++) {
                            endsum += +$("#Percent_" + j).val();
                        }
                        startsum = startsum + (2 + offset);
                        endsum = endsum - (1 + offset);
                        endofpipe1 = endsum;
                    }
                    
                    if (startsum != 0) {
                        for (k = startsum + 1; k <= endsum; k++) {
                            celltoremove3 = document.getElementById("cell_" + k + "_" + 3);
                            celltoremove3.parentNode.removeChild(celltoremove3);
                        }
                        cell3 = document.getElementById("cell_" + startsum + "_" + 3);
                        cell3.rowSpan = (endsum - startsum + 1);
                        cell3.innerHTML = laengde + " m";
                        cell3.setAttribute('class', 'ArrowF');
                    }
                }
                else if (Bentoniteunderlayerid != null && Bentoniteoverlayerid != null) {                    
                    var underindex = +$("#Filter1Under_" + i + " option:selected").text() -1; //index
                    var overindex = +$("#Filter1Over_" + i + " option:selected").text() -1; //index
                    if (overindex > underindex) {
                        for (j = 1; j <= Bentoniteunderlayerid; j++) {
                            startsum += +$("#Percent_" + j).val();
                        }
                        for (j = 1; j < Bentoniteoverlayerid; j++) {
                            endsum += +$("#Percent_" + j).val();
                        }
                        startsum = startsum + 1;
                        if (under > 0) {
                            startsum = startsum + 1;
                            var currentindex = +$("#Filter1Under_" + i + " option:selected").text() -1; //index
                            var nextindex = currentindex + 1;
                            var nextid = $("#Filter1Under_" + i + " option").eq(nextindex).val();
                            offset1 = getOffset(nextid);

                        }
                        if (over > 0) {
                            endsum = endsum - 1;
                            var currentindex = +$("#Filter1Over_" + i + " option:selected").text() -1; //index
                            var beforeindex = currentindex - 1;
                            var beforeid = $("#Filter1Over_" + i + " option").eq(beforeindex).val();
                            offset2 = getOffset(beforeid);

                        }
                        startsum = startsum + offset1;
                        endsum = endsum - offset2;
                        endofpipe1 = endsum;
                        if (offset1 > 0) {
                            for (k = startsum - offset1; k < startsum; k++) {
                                celltoremove3 = document.getElementById("cell_" + k + "_" + 3);
                                celltoremove3.parentNode.removeChild(celltoremove3);
                            }
                            cell1x = document.getElementById("cell_" + (startsum - 1 - offset1) + "_" + 3)
                            cell1x.rowSpan = (offset1 + 1)
                            cell1x.innerHTML = under + " m";
                            cell1x.setAttribute('class', 'ArrowP'); //This is new
                        }

                        for (k = startsum + 1; k <= endsum; k++) {
                            celltoremove3 = document.getElementById("cell_" + k + "_" + 3);
                            celltoremove3.parentNode.removeChild(celltoremove3);
                        }
                        cell3 = document.getElementById("cell_" + startsum + "_" + 3);
                        cell3.rowSpan = (endsum - startsum + 1);
                        cell3.innerHTML = laengde + " m";
                        cell3.setAttribute('class', 'ArrowF');

                        if (offset2 > 0) {
                            for (k = endsum + 2; k <= endsum + offset2 + 1; k++) {
                                celltoremove3 = document.getElementById("cell_" + k + "_" + 3);
                                celltoremove3.parentNode.removeChild(celltoremove3);
                            }
                            cell2x = document.getElementById("cell_" + (endsum + offset + 1) + "_" + 3)
                            cell2x.rowSpan = (offset2 + 1)
                            cell2x.innerHTML = over + " m";
                            cell2x.setAttribute('class', 'GrusA');
                        }
                    }
                    else {
                        for (j = 1; j < Bentoniteoverlayerid; j++) {
                            startsum += +$("#Percent_" + j).val();
                        }
                        for (j = 1; j <= Bentoniteunderlayerid; j++) {
                            endsum += +$("#Percent_" + j).val();
                        }
                        startsum = startsum + 1;
                        if (under > 0) {
                            endsum = endsum + 1;
                            var currentindex = +$("#Filter1Under_" + i + " option:selected").text() -1; //index
                            var nextindex = currentindex + 1;
                            var nextid = $("#Filter1Under_" + i + " option").eq(nextindex).val();
                            offset1 = getOffset(nextid);

                        }
                        if (over > 0) {
                            startsum = startsum - 1;
                            var currentindex = +$("#Filter1Over_" + i + " option:selected").text() -1; //index
                            var beforeindex = currentindex - 1;
                            var beforeid = $("#Filter1Over_" + i + " option").eq(beforeindex).val();
                            offset2 = getOffset(beforeid);

                        }
                        endofpipe1 = endsum;
                        //offset1 = 1;
                        if (offset2 > 0) {

                            cell1x = document.getElementById("cell_" + (startsum) + "_" + 3)
                            //cell1x.rowSpan = (offset2 + 1)
                            cell1x.innerHTML = over + " m";
                            cell1x.setAttribute('class', 'ArrowF');
                        }

                        for (k = startsum + 2; k <= endsum - 1; k++) {
                            celltoremove3 = document.getElementById("cell_" + k + "_" + 3);
                            celltoremove3.parentNode.removeChild(celltoremove3);
                        }
                        cell3 = document.getElementById("cell_" + (startsum + 1) + "_" + 3);
                        cell3.rowSpan = (endsum - startsum - 1);
                        cell3.innerHTML = "X m";
                        cell3.setAttribute('class', 'ArrowF');

                        if (offset1 > 0) {
                            //for (k = endsum + 1; k <= endsum + offset1; k++) {
                            //    celltoremove3 = document.getElementById("cell_" + k + "_" + 3);
                            //    celltoremove3.parentNode.removeChild(celltoremove3);
                            //}
                            cell2x = document.getElementById("cell_" + (endsum) + "_" + 3)
                            cell2x.rowSpan = 1;//(offset1 + 1)
                            cell2x.innerHTML = under + " m";
                            cell2x.setAttribute('class', 'ArrowF');
                        }
                        endofpipe1 = endsum; // + offset1;
                    }

                }
                else if (Bentoniteunderlayerid != null) {
                    endofpipe1 = endsum;
                    for (j = 1; j <= Bentoniteunderlayerid; j++) {
                        startsum += +$("#Percent_" + j).val();
                    }
                    
                    if (under > 0) {
                        startsum = startsum + 2;
                        var currentindex = +$("#Filter1Under_" + i + " option:selected").text() -1; //index
                        var nextindex = currentindex + 1;
                        var nextid = $("#Filter1Under_" + i + " option").eq(nextindex).val();
                        offset1 = getOffset(nextid);
                        offset1 = offset1 * 2;
                    }
                    else {
                        startsum = startsum + 1;
                        var currentindex = +$("#Filter1Under_" + i + " option:selected").text() -1; //index
                        var nextindex = currentindex + 1;
                        var nextid = $("#Filter1Under_" + i + " option").eq(nextindex).val();
                        offset1 = getOffset(nextid);
                        offset1 = offset1 * 2;
                    }
                    endsum = startsum + offset1 + 1;
                    
                    for (k = startsum + 1; k <= endsum; k++) {
                        celltoremove3 = document.getElementById("cell_" + k + "_" + 3);
                        celltoremove3.parentNode.removeChild(celltoremove3);
                    }
                    if (under > 0) {
                        cell3x = document.getElementById("cell_" + (startsum - 1) + "_" + 3);
                        cell3x.innerHTML = under + " m";
                        cell3x.setAttribute('class', 'ArrowP');
                    }
                    cell3 = document.getElementById("cell_" + startsum + "_" + 3);
                    cell3.rowSpan = (endsum - startsum + 1);
                    cell3.innerHTML = laengde + " m";
                    cell3.setAttribute('class', 'ArrowF');
                }
                else if (Bentoniteoverlayerid != null) {
                    
                    for (j = 1; j <= Bentoniteoverlayerid; j++) {
                        endsum += +$("#Percent_" + j).val();
                    }

                    if (over > 0) {
                        endsum = endsum - 2;
                        var currentindex = +$("#Filter1Over_" + i + " option:selected").text() -1; //index
                        var nextindex = currentindex - 1;
                        var nextid = $("#Filter1Over_" + i + " option").eq(nextindex).val();
                        offset1 = getOffset(nextid);
                        offset1 = offset1 * 2;
                    }
                    else {
                        endsum = endsum - 1;
                        var currentindex = +$("#Filter1Over_" + i + " option:selected").text() -1; //index
                        var nextindex = currentindex - 1;
                        var nextid = $("#Filter1Over_" + i + " option").eq(nextindex).val();
                        offset1 = getOffset(nextid);
                        offset1 = offset1 * 2;
                    }
                    if (over > 0) {
                        startsum = endsum - offset1 - 1;
                    }
                    else {
                        startsum = endsum - offset1;
                    }
                    endofpipe1 = endsum;
                    if (over > 0) {
                        cell3x = document.getElementById("cell_" + (endsum + 1) + "_" + 3);
                        cell3x.innerHTML = over + " m";
                        cell3x.setAttribute('class', 'ArrowP');
                    }

                    for (k = startsum + 1; k <= endsum; k++) {
                        celltoremove3 = document.getElementById("cell_" + k + "_" + 3);
                        celltoremove3.parentNode.removeChild(celltoremove3);
                    }
                    cell3 = document.getElementById("cell_" + (startsum) + "_" + 3);
                    cell3.rowSpan = (endsum - startsum + 1);
                    cell3.innerHTML = laengde + " m";
                    cell3.setAttribute('class', 'ArrowF');
                }
            }

            if ($("#BlindPipe1").prop('checked') == true) {

                var currentindex = +$("#Filter1Under_1 option:selected").text() - 1; //index
                var overindex = +$("#Filter1Over_1 option:selected").text() - 1; //index
                
                if (currentindex < overindex) {
                    currentindex = overindex;
                }
                var offsetblind = getOffset(currentindex);
                for (k = endofpipe1 + 2; k <= (endofpipe1 + offsetblind); k++) {
                    celltoremove3 = document.getElementById("cell_" + k + "_" + 3);
                    celltoremove3.parentNode.removeChild(celltoremove3);
                }
                cell3 = document.getElementById("cell_" + (endofpipe1 + 1) + "_" + 3);
                //cell3.rowSpan = (offsetblind - 1);
                cell3.rowSpan = 1;//offsetblind;
                cell3.innerHTML = $("#BlindPipe1m").val() + " m";
                cell3.setAttribute('class', 'Blind');
                endofpipe1 = endofpipe1 + 1;//+ offsetblind;
            }
        }
        function BuildFilter2() {
            endofpipe2 = 0;
            for (i = 1; i <= filtercount; i++) {
                var under = +$("#Filter2mUnder_" + i).val();
                var over = +$("#Filter2mOver_" + i).val();
                var laengde = +$("#Filter2m_" + i).val();
                var offset = 0;
                var offset1 = 0;
                var offset2 = 0;
                var Bentoniteunderlayerid = $("#Filter2Under_" + i + " option:selected").val();
                var Bentoniteoverlayerid = $("#Filter2Over_" + i + " option:selected").val();
                var startsum = 0;
                var endsum = 0;
                if ((Bentoniteunderlayerid != null && Bentoniteunderlayerid != "") && (Bentoniteoverlayerid != null && Bentoniteoverlayerid != "") && Bentoniteunderlayerid == Bentoniteoverlayerid) {
                    if (laengde >= 0) {
                        offset = getOffset(Bentoniteunderlayerid);
                        for (j = 1; j < Bentoniteunderlayerid; j++) {
                            startsum += +$("#Percent_" + j).val();
                        }
                        for (j = 1; j <= Bentoniteoverlayerid; j++) {
                            endsum += +$("#Percent_" + j).val();
                        }
                        startsum = startsum + (2 + offset);
                        endsum = endsum - (1 + offset);
                        endofpipe2 = endsum;
                    }
                    if (startsum != 0) {
                        for (k = startsum + 1; k <= endsum; k++) {
                            celltoremove5 = document.getElementById("cell_" + k + "_" + 5);
                            celltoremove5.parentNode.removeChild(celltoremove5);
                        }
                        cell5 = document.getElementById("cell_" + startsum + "_" + 5);
                        cell5.rowSpan = (endsum - startsum + 1);
                        cell5.innerHTML = laengde + " m";
                        cell5.setAttribute('class', 'ArrowF');
                    }
                }
                else if ((Bentoniteunderlayerid != null && Bentoniteunderlayerid != "") && (Bentoniteoverlayerid != null && Bentoniteoverlayerid != "")) {
                    var underindex = +$("#Filter2Under_" + i + " option:selected").text() - 1;
                    var overindex = +$("#Filter2Over_" + i + " option:selected").text() - 1;
                    if (overindex > underindex) {
                        for (j = 1; j <= Bentoniteunderlayerid; j++) {
                            startsum += +$("#Percent_" + j).val();
                        }
                        for (j = 1; j < Bentoniteoverlayerid; j++) {
                            endsum += +$("#Percent_" + j).val();
                        }
                        startsum = startsum + 1;
                        if (under > 0) {
                            startsum = startsum + 1;
                            var currentindex = +$("#Filter2Under_" + i + " option:selected").text() -1;
                            var nextindex = currentindex + 1;
                            var nextid = $("#Filter2Under_" + i + " option").eq(nextindex).val();
                            offset1 = getOffset(nextid);

                        }
                        if (over > 0) {
                            endsum = endsum - 1;
                            var currentindex = +$("#Filter2Over_" + i + " option:selected").text() -1;
                            var beforeindex = currentindex - 1;
                            var beforeid = $("#Filter2Over_" + i + " option").eq(beforeindex).val();
                            offset2 = getOffset(beforeid);

                        }
                        startsum = startsum + offset1;
                        endsum = endsum - offset2;
                        endofpipe2 = endsum;
                        if (offset1 > 0) {
                            for (k = startsum - offset1; k < startsum; k++) {
                                celltoremove5 = document.getElementById("cell_" + k + "_" + 5);
                                celltoremove5.parentNode.removeChild(celltoremove5);
                            }
                            cell1x = document.getElementById("cell_" + (startsum - 1 - offset1) + "_" + 5)
                            cell1x.rowSpan = (offset1 + 1)
                            cell1x.innerHTML = under + " m";
                            cell1x.setAttribute('class', 'ArrowP'); //This is new
                        }

                        for (k = startsum + 1; k <= endsum; k++) {
                            celltoremove5 = document.getElementById("cell_" + k + "_" + 5);
                            celltoremove5.parentNode.removeChild(celltoremove5);
                        }
                        cell5 = document.getElementById("cell_" + startsum + "_" + 5);
                        cell5.rowSpan = (endsum - startsum + 1);
                        cell5.innerHTML = laengde + " m";
                        cell5.setAttribute('class', 'ArrowF');

                        if (offset2 > 0) {
                            for (k = endsum + 2; k <= endsum + offset2 + 1; k++) {
                                celltoremove5 = document.getElementById("cell_" + k + "_" + 5);
                                celltoremove5.parentNode.removeChild(celltoremove5);
                            }
                            cell2x = document.getElementById("cell_" + (endsum + offset + 1) + "_" + 5)
                            cell2x.rowSpan = (offset2 + 1)
                            cell2x.innerHTML = over + " m";
                            cell2x.setAttribute('class', 'GrusA');
                        }
                    }
                    else {
                        for (j = 1; j < Bentoniteoverlayerid; j++) {
                            startsum += +$("#Percent_" + j).val();
                        }
                        for (j = 1; j <= Bentoniteunderlayerid; j++) {
                            endsum += +$("#Percent_" + j).val();
                        }
                        startsum = startsum + 1;
                        if (under > 0) {
                            endsum = endsum + 1;
                            var currentindex = +$("#Filter2Under_" + i + " option:selected").text() -1;
                            var nextindex = currentindex + 1;
                            var nextid = $("#Filter2Under_" + i + " option").eq(nextindex).val();
                            offset1 = getOffset(nextid);

                        }
                        if (over > 0) {
                            startsum = startsum - 1;
                            var currentindex = +$("#Filter2Over_" + i + " option:selected").text() -1;
                            var beforeindex = currentindex - 1;
                            var beforeid = $("#Filter2Over_" + i + " option").eq(beforeindex).val();
                            offset2 = getOffset(beforeid);

                        }
                        endofpipe2 = endsum;
                        if (offset2 > 0) {

                            cell1x = document.getElementById("cell_" + (startsum) + "_" + 5)
                            //cell1x.rowSpan = (offset2 + 1)
                            cell1x.innerHTML = over + " m";
                            cell1x.setAttribute('class', 'ArrowF');
                        }

                        for (k = startsum + 2; k <= endsum - 1; k++) {
                            celltoremove5 = document.getElementById("cell_" + k + "_" + 5);
                            celltoremove5.parentNode.removeChild(celltoremove5);
                        }
                        cell5 = document.getElementById("cell_" + (startsum + 1) + "_" + 5);
                        cell5.rowSpan = (endsum - startsum - 1);
                        cell5.innerHTML = "X m";
                        cell5.setAttribute('class', 'ArrowF');

                        if (offset1 > 0) {
                            cell2x = document.getElementById("cell_" + (endsum) + "_" + 5)
                            cell2x.rowSpan = 1;//(offset1 + 1)
                            cell2x.innerHTML = under + " m";
                            cell2x.setAttribute('class', 'ArrowF');
                        }
                        endofpipe2 = endsum; // + offset1;
                    }

                }
                else if (Bentoniteunderlayerid != null && Bentoniteunderlayerid != "") {
                    for (j = 1; j <= Bentoniteunderlayerid; j++) {
                        startsum += +$("#Percent_" + j).val();
                    }

                    if (under > 0) {
                        startsum = startsum + 2;
                        var currentindex = +$("#Filter2Under_" + i + " option:selected").text() -1;
                        var nextindex = currentindex + 1;
                        var nextid = $("#Filter2Under_" + i + " option").eq(nextindex).val();
                        offset1 = getOffset(nextid);
                        offset1 = offset1 * 2;
                    }
                    else {
                        startsum = startsum + 1;
                        var currentindex = +$("#Filter2Under_" + i + " option:selected").text() -1;
                        var nextindex = currentindex + 1;
                        var nextid = $("#Filter2Under_" + i + " option").eq(nextindex).val();
                        offset1 = getOffset(nextid);
                        offset1 = offset1 * 2;
                    }
                    endsum = startsum + offset1 + 1;
                    endofpipe2 = endsum;
                    for (k = startsum + 1; k <= endsum; k++) {
                        celltoremove5 = document.getElementById("cell_" + k + "_" + 5);
                        celltoremove5.parentNode.removeChild(celltoremove5);
                    }
                    if (under > 0) {
                        cell5x = document.getElementById("cell_" + (startsum - 1) + "_" + 5);
                        cell5x.innerHTML = under + " m";
                        cell5x.setAttribute('class', 'ArrowP');
                    }
                    cell5 = document.getElementById("cell_" + startsum + "_" + 5);
                    cell5.rowSpan = (endsum - startsum + 1);
                    cell5.innerHTML = laengde + " m";
                    cell5.setAttribute('class', 'ArrowF');
                }
                else if (Bentoniteoverlayerid != null && Bentoniteoverlayerid != "") {
                    for (j = 1; j <= Bentoniteoverlayerid; j++) {
                        endsum += +$("#Percent_" + j).val();
                    }

                    if (over > 0) {
                        endsum = endsum - 2;
                        var currentindex = +$("#Filter2Over_" + i + " option:selected").text() -1;
                        var nextindex = currentindex - 1;
                        var nextid = $("#Filter2Over_" + i + " option").eq(nextindex).val();
                        offset1 = getOffset(nextid);
                        offset1 = offset1 * 2;
                    }
                    else {
                        endsum = endsum - 1;
                        var currentindex = +$("#Filter2Over_" + i + " option:selected").text() -1;
                        var nextindex = currentindex - 1;
                        var nextid = $("#Filter2Over_" + i + " option").eq(nextindex).val();
                        offset1 = getOffset(nextid);
                        offset1 = offset1 * 2;
                    }
                    if (over > 0) {
                        startsum = endsum - offset1 - 1;
                    }
                    else {
                        startsum = endsum - offset1;
                    }
                    endofpipe2 = endsum;
                    if (over > 0) {
                        cell5x = document.getElementById("cell_" + (endsum + 1) + "_" + 5);
                        cell5x.innerHTML = over + " m";
                        cell5x.setAttribute('class', 'ArrowP');
                    }

                    for (k = startsum + 1; k <= endsum; k++) {
                        celltoremove5 = document.getElementById("cell_" + k + "_" + 5);
                        celltoremove5.parentNode.removeChild(celltoremove5);
                    }
                    cell5 = document.getElementById("cell_" + (startsum) + "_" + 5);
                    cell5.rowSpan = (endsum - startsum + 1);
                    cell5.innerHTML = laengde + " m";
                    cell5.setAttribute('class', 'ArrowF');
                }
            }
            if ($("#BlindPipe2").prop('checked') == true) {
                var currentindex = +$("#Filter2Under_1 option:selected").index();
                var overindex = +$("#Filter2Over_1 option:selected").index();
                if (currentindex < overindex) {
                    currentindex = overindex;
                }
                var offsetblind = getOffset(currentindex);
                for (k = endofpipe2 + 2; k <= (endofpipe2 + offsetblind); k++) {
                    celltoremove5 = document.getElementById("cell_" + k + "_" + 5);
                    celltoremove5.parentNode.removeChild(celltoremove5);
                }
                cell5 = document.getElementById("cell_" + (endofpipe2 + 1) + "_" + 5);
                cell5.rowSpan = 1;//offsetblind;
                cell5.innerHTML = $("#BlindPipe2m").val() + " m";
                cell5.setAttribute('class', 'Blind');
                endofpipe2 = endofpipe2 + 1;//+ offsetblind;
            }
        }
        
        
        function PutColours() {
            var thetable = document.getElementById("myTable");
            //thetable.style.borderCollapse = "unset";

            var i;

            var blindElements = thetable.getElementsByClassName("Blind");
            for (i = 0; i < blindElements.length; i++) {
                if (blindElements[i] !== null) {
                    blindElements[i].style.borderLeft = "2px solid red";
                    blindElements[i].style.borderRight = "2px solid red";
                    blindElements[i].style.borderBottom = "2px solid red";
                    blindElements[i].style.textAlign = "center";
                    blindElements[i].style.color = "red";
                    blindElements[i].style.backgroundImage = "url('https://drive.google.com/u/0/uc?id=1FsVU_xvH2cDP_QAxCqa9CE8evQ9jsjEl&export=download')";
                    blindElements[i].style.backgroundSize = "100% 100%";
                }
            }
            var bentoniteelements = document.getElementsByClassName("Bentonite");
            for (i = 0; i < bentoniteelements.length; i++) {
                bentoniteelements[i].style.backgroundImage = "url('https://drive.google.com/u/0/uc?id=1ndXaVByAfoVs1_gMfCadLRX4Y54ZVWIg&export=download')";
                bentoniteelements[i].style.textAlign = "center";
                bentoniteelements[i].style.color = "black";
            }
            var bentoniteAelements = document.getElementsByClassName("BentoniteA");
            for (i = 0; i < bentoniteAelements.length; i++) {
                bentoniteAelements[i].style.backgroundImage = "url('https://drive.google.com/u/0/uc?id=1ZPiSrXsCyb2SjaWHyG09s0kPxkpTU7Qt&export=download')";
                bentoniteAelements[i].style.textAlign = "center";
                bentoniteAelements[i].style.backgroundSize = "100% 100%";
                bentoniteAelements[i].style.color = "red";
            }
            var layerelements = document.getElementsByClassName("Layer");
            for (i = 0; i < layerelements.length; i++) {
                layerelements[i].style.height = $("#Percent_" + i).val() + "%";
                if (layerelements[i].innerHTML == "Kalk" || layerelements[i].innerHTML == "Kalkoverflade") {
                    layerelements[i].style.backgroundImage = "url('https://drive.google.com/u/0/uc?id=1TiCbhccSenSjFpstJc-_ZHXIMUQMmd06&export=download')";
                    layerelements[i].style.textAlign = "center";
                    layerelements[i].style.color = "black";
                }
                else if (layerelements[i].innerHTML == "Sand/Silt") {
                    layerelements[i].style.backgroundImage = "url('https://drive.google.com/u/0/uc?id=12N0jxBw0jfHa3kTAwqjVcUuAX0qcmjcQ&export=download')";
                    layerelements[i].style.textAlign = "center";
                    layerelements[i].style.color = "white";
                }
                //else if (layerelements[i].innerHTML.indexOf("Kvart") !== -1) {
                //    layerelements[i].style.backgroundImage = "url('https://drive.google.com/u/0/uc?id=1Vt0eEH497StObvxSK-Y_DmVtdfl35Xpj&export=download')";
                //    layerelements[i].style.textAlign = "center";
                //    layerelements[i].style.color = "white";
                //}
            }
            var filterelements = document.getElementsByClassName("Filter");
            for (i = 0; i < filterelements.length; i++) {
                filterelements[i].style.backgroundImage = "url('https://drive.google.com/u/0/uc?id=1m9V6R98ZF611rt6IAZey_5KAlI6Jwwjc&export=download')";
            }
            var filterAelements = document.getElementsByClassName("ArrowF");
            for (i = 0; i < filterAelements.length; i++) {
                filterAelements[i].style.backgroundImage = "url('https://drive.google.com/u/0/uc?id=1XtDzZx1nVASmoJs44w80CMcmAp16d3If&export=download')";
                filterAelements[i].style.backgroundSize = "100% 100%";
                filterAelements[i].style.textAlign = "center";
                filterAelements[i].style.color = "red";
                filterAelements[i].style.borderBottom = "2px solid green";
                filterAelements[i].style.borderLeft = "2px solid green";
                filterAelements[i].style.borderRight = "2px solid green";
                filterAelements[i].style.borderTop = "2px solid green";
                //take care of removing borders inbetween filter elements by checking class above and under
                var theid = filterAelements[i].id;
                var row = +theid.split("_")[1];
                var col = +theid.split("_")[2];
                for (k = (row + 1); k <= 100; k++) {
                    var newcell = document.getElementById("cell_" + k + "_" + col);
                    if (newcell !== null) {
                        var classname = newcell.className;
                        if (classname == "ArrowF") {
                            filterAelements[i].style.borderBottom = "none";
                        }
                        break;
                    }
                }
                for (j = row - 1; j >= 1; j--) {

                    var newcell = document.getElementById("cell_" + j + "_" + col);
                    if (newcell !== null) {
                        var classname = newcell.className;
                        if (classname == "ArrowF") {
                            filterAelements[i].style.borderTop = "none";
                        }
                        break;
                    }
                }
            }

            var grusAelements = document.getElementsByClassName("GrusA");
            for (i = 0; i < grusAelements.length; i++) {
                grusAelements[i].style.backgroundImage = "url('https://drive.google.com/u/0/uc?id=1L6p3Ng3x5FeeY_KISMj7CiOZwCcxFe11&export=download')";
                //grusAelements[i].style.backgroundImage = "url('https://drive.google.com/u/0/uc?id=1whcitLgWXYGzgCv0E3cSXV5c4Q_lCc72&export=download'),url('https://drive.google.com/u/0/1a10QOI641zeMHS1yWMFx8RV54khE_LxQ&export=download')";
                grusAelements[i].style.backgroundSize = "100% 100%";
                grusAelements[i].style.textAlign = "center";
                grusAelements[i].style.color = "red";
            }
            var pipeAElements = document.getElementsByClassName("ArrowP");
            for (i = 0; i < pipeAElements.length; i++) {
                pipeAElements[i].style.backgroundImage = "url('https://drive.google.com/u/0/uc?id=1FsVU_xvH2cDP_QAxCqa9CE8evQ9jsjEl&export=download')";
                pipeAElements[i].style.border = "2px solid red";
                pipeAElements[i].style.borderTop = "none";
                pipeAElements[i].style.borderBottom = "none";
                pipeAElements[i].style.backgroundSize = "100% 100%";
                pipeAElements[i].style.textAlign = "center";
                pipeAElements[i].style.color = "red";
            }
            var pipeElements = thetable.getElementsByClassName("Pipe");
            //var pipeElements = document.getElementsByClassName("Pipe");
            for (i = 0; i < pipeElements.length; i++) {
                if (pipeElements[i] !== null) {
                    pipeElements[i].style.borderLeft = "2px solid red";
                    pipeElements[i].style.borderRight = "2px solid red";
                    pipeElements[i].style.borderTop = "none";
                    pipeElements[i].style.borderBottom = "none";
                }
            }
            var gruselements = document.getElementsByClassName("Grus");
            for (i = 0; i < gruselements.length; i++) {
                gruselements[i].style.backgroundImage = "url('https://drive.google.com/u/0/uc?id=1whcitLgWXYGzgCv0E3cSXV5c4Q_lCc72&export=download')";
                gruselements[i].style.borderLeft = "1px";
                gruselements[i].style.borderRight = "1px";
            }

        }
        function MergeGrus() {
            for (j = 2; j <= 6; j++) {
                var start = 0;
                var end = 0;
                var running = false;
                var twofilters = $("#ToFiltre").val();
                for (i = 2; i < 100; i++) {
                    if (twofilters == "true" || (twofilters == "false" && (j == 2 || j == 3 || j == 4))) {
                        cell = document.getElementById("cell_" + i + "_" + j);
                        if (cell == null) {

                        }
                        else {
                            if (cell.innerHTML == "") {
                                if (running == false) {
                                    start = i;
                                    running = true;
                                }
                                end = i;
                            }
                            else
                            {
                                if (end > start && running == true) {
                                    for (k = start + 1; k <= end; k++) {
                                        celltoremove = document.getElementById("cell_" + k + "_" + j);
                                        celltoremove.parentNode.removeChild(celltoremove);
                                    }
                                    cellstart = document.getElementById("cell_" + start + "_" + j);
                                    cellstart.rowSpan = (end - start + 1);
                                    cellstart.innerHTML = "Grus";
                                    cellstart.style.textAlign = "center";
                                    cellstart.setAttribute('class', 'Grus');
                                    start = 0;
                                    end = 0;
                                    running = false;
                                }

                            }
                            if (i == 99 && cell.innerHTML == "") {
                                if (end > start && running == true) {
                                    cellstart = document.getElementById("cell_" + start + "_" + j);
                                    cellstart.rowSpan = (end - start + 1);
                                    cellstart.innerHTML = "Grus";
                                    cellstart.style.textAlign = "center";
                                    cellstart.style.borderLeft = "none";
                                    cellstart.style.borderRight = "none";
                                    cellstart.setAttribute('class', 'Grus');
                                    for (k = start + 1; k <= end; k++) {
                                        celltoremove = document.getElementById("cell_" + k + "_" + j);
                                        celltoremove.parentNode.removeChild(celltoremove);
                                    }

                                    start = 0;
                                    end = 0;
                                    running = false;
                                }
                            }
                        }
                    }
                }

            }
        }

        function CreatePipe1()
        {
            var startpipe = 1;
            var stoppipe = 1;
            var therowspan = 0;
            for (i = 1; i <= endofpipe1; i++) {
                cell = document.getElementById("cell_" + i + "_" + 3);
                if (cell == null) {
                    therowspan = therowspan - 1;
                }
                else {
                    if (cell.classList.contains("Filter") || cell.classList.contains("ArrowF") || cell.classList.contains("ArrowP")) {
                        stoppipe = i - 1;
                        break;
                    }
                }
                therowspan = therowspan + 1;
            }
            if (stoppipe > 1) {
                for (k = startpipe + 1; k <= stoppipe; k++) {
                    celltoremove3 = document.getElementById("cell_" + k + "_" + 3);
                    celltoremove3.parentNode.removeChild(celltoremove3);
                }
                cellp = document.getElementById("cell_" + startpipe + "_" + 3);
                cellp.rowSpan = therowspan; //(stoppipe - startpipe + 1);
                cellp.innerHTML = $("#Filter1_Dim").val();
                cellp.style.textAlign = "center";
                cellp.setAttribute('class', 'Pipe');


            }

        }
        function CreatePipe2() {
            var startpipe = 1;
            var stoppipe = 1;
            for (i = 1; i <= endofpipe2; i++) {
                cell = document.getElementById("cell_" + i + "_" + 5);
                if (cell == null) {

                }
                else {
                    if (cell.classList.contains("Filter") || cell.classList.contains("ArrowF") || cell.classList.contains("ArrowP")) {
                        stoppipe = i - 1;
                        break;
                    }
                }
            }
            if (stoppipe > 1) {
                for (k = startpipe + 1; k <= stoppipe; k++) {
                    celltoremove5 = document.getElementById("cell_" + k + "_" + 5);
                    celltoremove5.parentNode.removeChild(celltoremove5);
                }
                cell5 = document.getElementById("cell_" + startpipe + "_" + 5);
                cell5.rowSpan = (stoppipe - startpipe + 1);
                cell5.innerHTML = $("#Filter2_Dim").val();
                cell5.style.textAlign = "center";
                cell5.setAttribute('class', 'Pipe');

            }

        }
        function UpdateF1Laengde() {
            var laengde = $("#Filter1_Laengde").val();
            $("#Filter1m_1").val(laengde);
        }
        function UpdateF2Laengde() {
            var laengde = $("#Filter2_Laengde").val();
            $("#Filter2m_1").val(laengde);
        }
        function InsertGravelAgain() {
            if ($("#BlindPipe1").prop('checked') == true) {
                row3start = 0;
                row3span = 0;
                for (i = 99; i > 0; i--) {
                    var lastcell3 = document.getElementById("cell_" + i + "_3")
                    if (lastcell3 != null) {
                        if (lastcell3.classList.contains("Blind"))
                        {
                            var resultingrow = lastcell3.rowSpan + i;
                            if (resultingrow != 99) {
                                row3start = i + 1;
                                row3span = 99 - row3start + 1;
                            }
                        }
                        break;

                    }
                }
                if (row3start != 0) {
                    var row3 = document.getElementById("row_" + row3start);
                    var cellX3 = document.getElementById("cell_" + row3start + "_3");
                    if (cellX3 == null) {
                        var over = +$("#Filter1mOver_1").val();
                        var c3 = row3.insertCell(0);
                        c3.id = "cell_" + row3start + "_3";
                        c3.rowSpan = row3span;
                        c3.setAttribute('class', 'GrusA');
                        c3.innerHTML = over + " m";
                    }
                }
            }
            if ($("#BlindPipe2").prop('checked') == true) {
                row5start = 0;
                row5span = 0;
                for (i = 99; i > 0; i--) {
                    var lastcell5 = document.getElementById("cell_" + i + "_5")
                    if (lastcell5 != null) {
                        if (lastcell5.classList.contains("Blind")) {
                            var resultingrow = lastcell5.rowSpan + i;
                            if (resultingrow != 99) {
                                row5start = i + 1;
                                row5span = 99 - row5start + 1;
                            }
                        }
                        break;

                    }
                }
                if (row5start != 0) {
                    var row5 = document.getElementById("row_" + row5start);
                    var cellX5 = document.getElementById("cell_" + row5start + "_5");
                    if (cellX5 == null) {
                        var over = +$("#Filter2mOver_1").val();
                        var c5 = row5.insertCell(0);
                        c5.id = "cell_" + row5start + "_5";
                        c5.rowSpan = row5span;
                        c5.setAttribute('class', 'GrusA');
                        c5.innerHTML = over + " m";
                    }
                }
            }
        }

    </script>
</body>

</html>
