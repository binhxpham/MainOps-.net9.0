@model MainOps.Models.ViewModels.ProjectsOverViewVM
@using Microsoft.AspNetCore.Localization; 
<head>
    <script src="https://maps.googleapis.com/maps/api/js?key=@GoogleMaps.Value.ApiKey&libraries=places"></script>
</head>

@{
    ViewData["Title"] = SharedLocalizer.GetLocalizedHtmlString("Project Overview");
    var departments = Model.Projects.Select(x => x.DepartmentId).Distinct().ToList();
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var theculture = requestCulture.RequestCulture.UICulture.Name;
}
<br />
<input id="theculturediv" value="@theculture" hidden="hidden" />
@if(theculture == "nl-NL")
            {
    <h2>Tjaden Maps</h2>
            }
            else
            {
                <h2>@SharedLocalizer.GetLocalizedHtmlString("Project Overview")</h2>
            }

@*<input id="locationTextField" class="controls" type="text" style="width:200px;" placeholder="@SharedLocalizer.GetLocalizedHtmlString("Find...")">*@
<br />
<div style="width:100%;">
    @if (theculture == "nl-NL")
    {
        <div id="documentinfo" style="width:100%;" hidden="hidden"></div>
        <table style="width:50%;">
            <thead>
                <tr>
                    <th colspan="2" style="text-align:left;">Legend</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td style="width:25%;">Boringen:</td>
                    <td style="width: 25%; background-color: blue;"></td>
                    <td style="width:25%;">Bemalingen FR (Frankrijk):</td>
                    <td style="width: 25%; background-color: yellow;"></td>
                </tr>
                <tr>
                    <td style="width:25%;">Bemalingen NL:</td>
                    <td style="width: 25%; background-color: lawngreen;"></td>
                    <td style="width:25%;">Bemalingen BE (Belgie):</td>
                    <td style="width: 25%; background-color: pink;"></td>
                </tr>
            </tbody>
        </table>
    }
    else
    {
        <div id="documentinfo" style="width:100%;"></div>
    }
    
    <div id="selectproject">
        <table style="width:100%;table-layout:fixed;">
            <tr>
                <td>
                    <select id="ProjectId" asp-items="ViewBag.ProjectId" onchange="ShowProject();" style="width:50%;">
                        <option value="">@SharedLocalizer.GetLocalizedHtmlString("Select Project")</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td>
                    <select id="SubProjectId" asp-items="ViewBag.SubProjectId" onchange="ShowSubProject();" style="width:50%;">
                        <option value="">@SharedLocalizer.GetLocalizedHtmlString("Select SubProject")</option>
                    </select>
                </td>
            </tr>
        </table>
    </div>
    <br />
    <div id="myDiv" style="width:100%;height:600px;"></div>
    <div id="allprojectdocuments" style="width:100%;"></div>
    <div id="alldocumentsinfo" style="width:100%;"></div>
</div>
@section Scripts {
    <script type="text/javascript">
        var myposmarker;
        var isfound = false;
        var theculturediv = document.getElementById("theculturediv").value;
        var myLatLng = { lat: 55.312440, lng: 11.491625 };
        if (theculturediv == "nl-NL") {
            myLatLng = { lat: 51.8313073, lng: 4.5564272 };
        }
        var ProjectMarkers = [];
        var SubProjectMarkers = [];
        var markers = [];
        var id;
        var mapOptions = {
            center: myLatLng,
            zoom: 8,
            minZoom: 4,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var map = new google.maps.Map(document.getElementById("myDiv"), mapOptions);
        if (navigator.geolocation) {
            id = navigator.geolocation.watchPosition(function (position) {
                var myLat = position.coords.latitude;
                var myLng = position.coords.longitude;
                var myAcc = position.coords.accuracy;
                getPos(myLat, myLng, myAcc);
            },
                function (error) {
                    if (error.code == error.PERMISSION_DENIED) {
                        alert("error permission denied - you have turned off coordinates on your device");
                    }

                }, { maximumAge: 0, timeout: 8000, enableHighAccuracy: true });
        }
        $(document).ready(function () {
            DisplayGoogleMap();
        });
    function setPos(lat, lng) {
        var initialLocation = new google.maps.LatLng(lat, lng);
        if (myposmarker == null) {
            myposmarker = new google.maps.Marker({
                map: map,
                position: { lat: lat, lng: lng },
                title: "You",
            });
            myposmarker.setIcon({
                url: 'https://maps.google.com/mapfiles/ms/icons/yellow-dot.png',
                scaledSize: new google.maps.Size(70, 70)
            })
            myposmarker['infowindow'] = new google.maps.InfoWindow({
                content: '@SharedLocalizer.GetLocalizedHtmlString("Your Position!")'
            });
            myposmarker.setMap(map);
            map.setCenter(new google.maps.LatLng(lat, lng));
        }
        google.maps.event.addListener(myposmarker, 'click', function () {
            this['infowindow'].open(map, this);
        });
        map.setCenter(initialLocation);
    }
        function getPos(lat, lng, acc) {

        $("#accuracy").val(acc);
        $("#latinput").val(lat);
        $("#longinput").val(lng);
        if (!isfound) {
            setPos(lat, lng);
            isfound = true;
        }
    }

        function DisplayProjectDocuments(index) {
            $.ajax({
                type: 'post',
                url: '@Url.Action("GetDocuments","Projects")',
                data: {
                    'id': index
                },
                success: function (output) {
                    $('#documentinfo').html(output);
                },
                error: function () {
                    alert("error");
                }
            });
        }
        function DisplaySubProjectDocuments(index) {
            $.ajax({
                type: 'post',
                url: '@Url.Action("GetDocuments","SubProjects")',
                data: {
                    'id': index
                },
                success: function (output) {
                    $('#documentinfo').html(output);
                },
                error: function () {
                    alert("error");
                }
            });
        }
        function ShowProject() {
            var theproject = $("#ProjectId").val();
            if (theproject != "" && theproject != null) {
                for (i = 0; i < ProjectMarkers.length; i++) {
                    if (ProjectMarkers[i].projectid == theproject) {
                        ProjectMarkers[i].setVisible(true);
                        for (j = 0; j < SubProjectMarkers.length; j++) {
                            if (SubProjectMarkers[j].projectid == theproject) {
                                SubProjectMarkers[j].setVisible(true);
                            }
                            else {
                                SubProjectMarkers[j].setVisible(false);
                            }
                        }
                    }
                    else {
                        ProjectMarkers[i].setVisible(false);
                    }
                }
            }
            else {
                for (i = 0; i < ProjectMarkers.length; i++) {
                    ProjectMarkers[i].setVisible(true);
                }
                for (j = 0; j < SubProjectMarkers.length; j++) {
                    SubProjectMarkers[j].setVisible(true);
                }
            }
        }
        function ShowSubProject() {
            var theproject = $("#SubProjectId").val();
            if (theproject != "" && theproject != null) {
                for (j = 0; j < SubProjectMarkers.length; j++) {
                    if (SubProjectMarkers[j].subprojectid == theproject) {
                        SubProjectMarkers[j].setVisible(true);
                        for (i = 0; i < ProjectMarkers.length; i++) {
                            ProjectMarkers[i].setVisible(false);
                        }
                    }
                    else {
                        SubProjectMarkers[j].setVisible(false);
                    }
                }
            }
            else {
                for (j = 0; j < SubProjectMarkers.length; j++) {
                    SubProjectMarkers[j].setVisible(true);
                }
            }


        }
        function DisplayGoogleMap() {
            //Set the Latitude and Longitude of the Map
            //var input = document.getElementById('locationTextField');
            //var searchBox = new google.maps.places.SearchBox(input);
            //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
            //map.addListener('bounds_changed', function () {
            //    searchBox.setBounds(map.getBounds());
            //});
            ProjectMarkers = [];
            SubProjectMarkers = [];
            markers = [];
            
            @foreach(var project in Model.Projects)
            {
             <text>
                var marker = new google.maps.Marker({
                  map: map,
                  position: { lat: @project.Latitude   , lng: @project.Longitude },
                    title: "@project.Name",
                    projectid: "@project.Id",
                    departmentid: "@project.DepartmentId",
                });
                    //content: '@project.Name - Responsible: @project.Responsible_Person - Address: @project.Address'
                marker['infowindow'] = new google.maps.InfoWindow({
                    content: '@Html.Raw(@Model.ProjectViews[Model.Projects.IndexOf(project)])'
                });

                google.maps.event.addListener(marker, 'click', function () {
                    this['infowindow'].open(map, this);
                    DisplayProjectDocuments(@project.Id);
                });
                
            @if (project.DepartmentId.Equals(1)) {
                <text>
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/blue.png')
                </text>
            }
            else if (@project.DepartmentId.Equals(2)) {
                <text>
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/yellow.png')
                </text>
            }
            else if (@project.DepartmentId.Equals(3)) {
                <text>
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/green.png')
                </text>
            }
            else if (@project.DepartmentId.Equals(4)) {
                <text>
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/pink.png')
            </text>
            }
            else {
                <text>
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/blue.png')
            </text>
            }
                marker.setMap(map);
                ProjectMarkers.push(marker)
            </text>
            }
            @foreach(var subproject in Model.SubProjects)
            {
             <text>
                var marker = new google.maps.Marker({
                  map: map,
                  position: { lat: @subproject.Latitude   , lng: @subproject.Longitude },
                    title: "@subproject.Name",
                    subprojectid: "@subproject.Id",
                    projectid: "@subproject.ProjectId",
                    departmentid: "@subproject.Project.DepartmentId",
                });

                marker['infowindow'] = new google.maps.InfoWindow({
                    content: '@Html.Raw(@Model.SubProjectViews[Model.SubProjects.IndexOf(subproject)])'
                });

                google.maps.event.addListener(marker, 'click', function () {
                    this['infowindow'].open(map, this);
                    DisplaySubProjectDocuments(@subproject.Id);
                });
            @if (@subproject.ProjectId.Equals(49)) {
                <text>
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/purple.png')
            </text>
            }
            else {
                <text>
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/red.png')
            </text>
            }
                marker.setMap(map);
                SubProjectMarkers.push(marker)
            </text>
            }
        }

    </script>
}
